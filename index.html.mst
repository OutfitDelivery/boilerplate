<!DOCTYPE html>
<html async>
  <head>
    <title>Template Name</title> <!--Please Add Template Name Here -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="template-built-by" content=""/>
    <meta name="scope" content="DTB-000"/>
    <meta name="build" content="DTB-001"/>
    <meta name="updates" content="DTB-888, DTB-0000"/>

    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/css/main.min.css"/>

    <!--Please Link Your Fonts Here-->

    <style>
      /*Please Add Your Template Styling Here*/
      
    </style>
  </head>
  <body data-trim="{{trim-marks}}{{^trim-marks}}true{{/trim-marks}}" data-renderer="2" data-reduce-export-font-size-by-percent="0" data-reduce-firefox-font-size-by-percent="0"> <!--NEED TO REMOVE / AUDIT THESE DATA ATTRIBUTES HERE-->
    <div class="page">
      <div class="bleed">
        <div class="container">
          
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/fontfaceobserver.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/limiters.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/all-images-loaded-callback.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/prefixfree.min.js"></script>

    <!--<script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/formatters.min.js"></script>-->
    <!--<script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/custom-rich-text.min.js"></script>-->
    <!--<script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/hide-empty-titles.min.js"></script>-->
    <!--<script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/qrcode.min.js"></script>-->
    <!--<script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/textfit.min.js"></script>-->
    <!--<script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.2.0/js/validate.min.js"></script>-->
    

    <!--Dynamic Columns & Pages -->
    <!--<script src="js/dynamic-inject.js"></script>--> <!--You will need a Mutation Observer for this one if you want to use it--><!--Need to write-->

    <script>
      console.clear();

      window.addEventListener('load', function(event) {
        const fonts = []; //List your document fonts here
        if(!validFontList(fonts)) return;
        
        const fontObservers = [];

        fonts.forEach(font => {
          const obs = new FontFaceObserver(font);
          fontObservers.push(obs.load())
        });
        Promise.all(fontObservers).then(() => {
          /*Functions To Run After Load*/
          setOutfitState();
          setupPlaceholder("{{placeholder-visibility}}", ["{{{placeholder-1}}}", "{{{placeholder-2}}}"]);
          //hideEmptyTitles();
          checkCrop();
          //checkExport();
          charLimit();
          observerAndLoad();

          if(getOutfitState() == "document"){
            imageCompression();
          }
          
          if(getOutfitState() == "template" || getOutfitState() == "document"){
            setupMutationObserver(document.body, {characterData: true, childList: true, subtree: true, characterDataOldValue: true}, observerAndLoad);
          }
          
          console.info("Document is Print Ready");
          setTimeout(function() {	document.dispatchEvent(new Event('printready'));	}, 5000);
        }, function () {
          console.error("Font is not available");
        });
      });
      
      function observerAndLoad(){
        if(getOutfitState() != "preview"){
          maxLineCheck();
          maxHeightCheck();
          charLimit();
        }
        
        //hideEmptyTitles();
        
      }
      
      

      
      /* STILL TO TEST / DEVELOP
      function dataReplace(selector, data){
        let targets = document.querySelectorAll(selector);
        targets.forEach(function (target) {
          var original = target.querySelector("[data-original]");
          var dynamic = target.querySelector("[data-dynamic]");

          data.forEach(item => {
            let lookup = item[0];
            let replace = item[1];

            let formatted = (original.innerHTML).replaceAll(lookup, replace);
            dynamic.innerHTML = formatted;
            original.style.display = "none";
          });
        });
      }*/
    </script>
  </body>
</html>
