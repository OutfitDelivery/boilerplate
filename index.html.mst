<!DOCTYPE html>
<html async>
  <!-- <script>window.onerror = (e) => {document.querySelector('body').insertAdjacentHTML('afterbegin', `<p id="debug">${e}</p><style>#debug{font-size: 18px; font-family: monospace;}</style>`)}</script> -->
  <head>
  <!--  Template Admin Build Instructions 
        1. Fill Out Title Meta-Data
        2. Fill Out Scope Card Meta-Data (you can find this number linked on the Jira Card)
        3. Fill Out Build Card Meta-Data
        4. Remove this comment
  -->
    <title>PUT_TEMPLATE_NAME_HERE</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="template-built-by" content="PUT_YOUR_NAME_HERE"/>
    <meta name="scope" content="DTB-PUT_JIRA_NUMBER_HERE"/>
    <meta name="build" content="DTB-PUT_JIRA_NUMBER_HERE"/>
    <meta name="updates" content=""/>

    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/css/main.min.css"/>
    <style>
      /* ADD_ROOT_STYLES_HERE */
    </style>
  </head>
  <body data-trim="{{trim-marks}}{{^trim-marks}}true{{/trim-marks}}" data-renderer="2" data-reduce-export-font-size-by-percent="0" data-reduce-firefox-font-size-by-percent="0" data-development="true">
    <div class="page">
      <div class="bleed">
        <div class="container">
          
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/fontfaceobserver.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/limiters.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/prefixfree.min.js"></script>

    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/formatters.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/custom-rich-text.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/hide-empty-titles.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/qrcode.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/textfit.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/validate.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/all-images-loaded-callback.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.4/js/mto.min.js"></script>-->
    
    <script>
      console.clear();
    	const state = setOutfitState();

      /* let mto = () => {
        setupMTO("{{{team.mto}}}", {{{account.snippets.mtoV3-params}}}{{^account.snippets.mtoV3-params}}{}{{/account.snippets.mtoV3-params}}, `{{{mto-v3}}}{{^mto-v3}}[]{{/mto-v3}}`, []);
        // TODO ASK MATT
        if(getOutfitState() == "template" || getOutfitState() == "document"){
          var debounceFunction = debounce(mto, 100);
          setupMutationObserver(window.parent.document, { childList: true, subtree: true }, debounceFunction, []);
        }
      }*/
      
      window.addEventListener('DOMContentLoaded', (event) => {
        const fonts = ['PUT_ALL_FONT_NAMES_HERE']; //List your document fonts here
        if(invalidFontList(fonts)) return;
        
        Promise.all(fonts.map(font => {
          return new FontFaceObserver(font).load();
        })).then(async (load) => {
          /* Functions To Run After Load */
          // mto();
          setupPlaceholder("{{placeholder-visibility}}", ["{{{placeholder-1}}}", "{{{placeholder-2}}}"]);

          checkCrop();

          await observerAndLoad();

          if (state === "document") {
            imageCompression();
          }
          
          if (state === "template" || state === "document") {
            setupMutationObserver(document.body, { characterData: true, childList: true, subtree: true, characterDataOldValue: true }, observerAndLoad);
          }

          console.info("Document is Print Ready");
          setTimeout(() => {
            document.dispatchEvent(new Event('printready'))
          }, 5000);
        }).catch((err) => {
          throw err;
        });
      });

      let observerAndLoad = async () => {
        if (state !== "preview") {
          maxLineCheck();
          maxHeightCheck();
          charLimit();
          // dynamicReplace();
          // Place Textfit here
        }
      }
    </script>
  </body>
</html>
