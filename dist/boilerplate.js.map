{"version":3,"sources":["webpack://boilerplate/webpack/universalModuleDefinition","webpack://boilerplate/./modules/polyfills.js","webpack://boilerplate/./modules/prefixfree.js","webpack://boilerplate/./node_modules/less/dist/less.js","webpack://boilerplate/webpack/bootstrap","webpack://boilerplate/webpack/runtime/define property getters","webpack://boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://boilerplate/./modules/fontfaceobserver.js","webpack://boilerplate/./modules/pageSetup.js","webpack://boilerplate/./modules/replace.js","webpack://boilerplate/./modules/placeholder.js","webpack://boilerplate/./modules/limiters.js","webpack://boilerplate/./modules/textFit.js","webpack://boilerplate/./modules/boilerplate.js"],"names":["root","factory","exports","module","define","amd","self","String","prototype","replaceAll","str","newStr","Object","toString","call","toLowerCase","this","replace","split","join","m","a","b","slice","document","querySelectorAll","window","addEventListener","e","StyleFix","link","href","getAttribute","rel","hasAttribute","p","l","d","f","exec","h","k","g","parentNode","c","XMLHttpRequest","onreadystatechange","readyState","responseText","status","fix","test","n","RegExp","createElement","textContent","media","disabled","setAttribute","id","insertBefore","removeChild","open","send","XDomainRequest","onerror","onprogress","onload","styleElement","styleAttribute","process","forEach","register","fixers","splice","length","camelCase","toUpperCase","deCamelCase","setTimeout","getComputedStyle","PrefixFree","prefixCSS","prefix","functions","indexOf","properties","prefixSelector","property","value","valueProperties","selectorMap","prefixProperty","documentElement","style","charAt","push","pop","Prefix","sort","params","calc","element","initial","grab","grabbing","box","flexbox","flex","grid","keywords","sheet","cssRules","keyframes","viewport","selectors","atrules","appendChild","className","extractId","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","styles","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","styleSheet","createTextNode","childNodes","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","cssText","Error","scripts","currentScript","logger","error","msg","_fireEvent","warn","info","debug","addListener","listener","_listeners","removeListener","i","type","logFunction","Environment","externalEnvironment","fileManagers","requiredFunctions","concat","propName","environmentFunc","bind","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","defineProperty","get","fileInfo","getIndex","setParent","nodes","set","node","Array","isArray","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","output","accept","visitor","visit","eval","_operate","op","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","match","map","parseInt","alpha","clamp","v","max","min","toHex","round","assign","luma","r","pow","doNotCompress","color","colorFunction","compress","args","toHSL","s","toRGB","splitcolor","operate","other","toHSV","toARGB","x","fromKeyword","keyword","key","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","getType","payload","copy","target","constructor","getPrototypeOf","il","arguments","j","jl","__spreadArrays","getOwnPropertyNames","getOwnPropertySymbols","reduce","carry","props","includes","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","enumerable","writable","configurable","assignProp","nonenumerable","getLocation","inputStream","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","utils","freeze","__proto__","merge","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","name","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","makeImportant","debugInfo","ctx","lineSeparator","dumpLineNumbers","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","isPathLocalRelative","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","functionRegistry","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","defaultFunc","value_","error_","reset","Ruleset","rules","strictImports","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","hash","vars","name_1","name_2","decl","parseValue","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","strictUnits","returnStr","is","unitString","isLength","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","__spreadArrays$1","Call","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","urlArgs","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","javascriptEnabled","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","variadic","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","emitFrom","emitChunk","force","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","preText","serializeVars","preProcessors","getPreProcessors","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","atomicCondition","body","me","tryConditionFollowedByParenthesis","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","number","rgba","size","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","getItemsFromNode","list","_SELF","expr","_i","values","range","step","from","to","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","logger$1","parseNodeVersion_1","major","minor","patch","pre","build","lessRoot","sourceMapOutput","sourceMapBuilder","parseTree","importManager","SourceMapBuilder","ParseTree","toCSSOptions","sourceMap","file","getExternalSourceMap","files","rootFilename","SourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","ImportManager","rootFileInfo","mime","queue","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","render","self_1","Promise","resolve","reject","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","ctor","api","fileCache","doXHR","errback","xhr","async","isFileProtocol","fileAsync","handleResponse","getResponseHeader","overrideMimeType","setRequestHeader","supports","clearFileCache","location","useFileCache","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","innerHTML","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","options$1","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","attachEvent","u","z","offsetWidth","width","scrollLeft","scrollWidth","A","q","TypeError","race","all","C","D","E","J","fonts","K","font","L","stretch","family","load","H","getTime","navigator","vendor","userAgent","G","M","N","clearTimeout","removeEventListener","detachEvent","I","hidden","trimMarks","blockRender","querySelector","setSize","vw","innerWidth","vh","innerHeight","preliminaryCalc","isExportMode","isFirefox","exportReduceVal","reduceExportFontSizeByPercent","firefoxReduceVal","reduceFirefoxFontSizeByPercent","finalCalc","fontSize","dynamicReplace","targets","inputValue","lookup","innerText","lookupSpan","temp","dynamicReplaceMulti","html","replaceFrom","replaceTo","search","dynamicReplaceSingle","setupPlaceholder","placeholderVisibility","placeholderImages","page","placeholderImage","placeholderStructure","insertAdjacentHTML","countLines","testBox","display","oneLineHeight","lineCount","height","getPropertyValue","maxLineCheck","orientation","isLocalDev","preventExportOverflow","isProjectKit","maxLine","maxLineAlt","classList","maxHeightCheck","variation","maxHeight","maxHeightDynamic","dynamicAssign","cssCheck","bodyComputedStyle","blockHeight","scrollHeight","maxHeightUnit","maxHeightAlt","computedBlockStyle","container","overflow","containerComputed","paddingTop","paddingBottom","dynamicHeight","totalHeight","subtrahend","subtrahendMargins","marginTop","marginBottom","offsetHeight","charLimit","limit","tokenValue","defaultSettings","alignVert","alignHoriz","multiLine","stopOverflow","detectMultiLine","fontUnit","fontChangeSize","minFontSize","maxFontSize","reProcess","widthOnly","alignVertWithFlexbox","textFit","settings","toArray","elType","processItem","HTMLElement","nodeType","nodeName","innerSpan","originalHeight","originalHTML","originalWidth","low","mid","high","outerHTML","hasClass","startingSize","maxLines","isInteger","customOverflowMessage","addStyleSheet","cls","imageLoadedCheck","imagesLoaded","imagesFailed","images","img","complete","naturalHeight","badImg","src","domReady","winLoad","boilerplate","ensureImagesLoad","allowLegacyRendering","checkList","builtBy","scopeCard","builtCard","some","fontsListed","FontFaceObserver","cropSVG","pageHeight","agent","pageHeightSetup","bleed","left","right","top","bottom","onTextChange","imageCompressEl","editorString","checkURL","imgSrc","imgEl","imgURL","bkgImgEl","bkgUrl","backgroundImage","imageCompression","loadTime","now","performance","timing","navigationStart","dispatchEvent","Event"],"mappings":"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","file":"boilerplate.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"boilerplate\"] = factory();\n\telse\n\t\troot[\"boilerplate\"] = factory();\n})(self, function() {\nreturn ","// render has an issue with replaceAll causing errors to be thrown which stops the render. This is a pollyfil for all renders\nString.prototype.replaceAll = function (str, newStr) {\n  // If a regex pattern\n  if (Object.prototype.toString.call(str).toLowerCase() === \"[object regexp]\") {\n    return this.replace(str, newStr);\n  }\n  // If a string\n  return this.split(str).join(newStr);\n};\n","/**\r\n * StyleFix 1.0.3 & PrefixFree 1.0.7\r\n * @author Lea Verou\r\n * MIT license\r\n */\r\n (function(){function m(a,b){return[].slice.call((b||document).querySelectorAll(a))}if(window.addEventListener){var e=window.StyleFix={link:function(a){var b=a.href||a.getAttribute(\"data-href\");try{if(!b||\"stylesheet\"!==a.rel||a.hasAttribute(\"data-noprefix\"))return}catch(p){return}var d=b.replace(/[^\\/]+$/,\"\"),f=(/^[a-z]{3,10}:/.exec(d)||[\"\"])[0],h=(/^[a-z]{3,10}:\\/\\/[^\\/]+/.exec(d)||[\"\"])[0],k=/^([^?]*)\\??/.exec(b)[1],g=a.parentNode,c=new XMLHttpRequest,l;c.onreadystatechange=function(){4===c.readyState&&\r\n    l()};l=function(){var b=c.responseText;if(b&&a.parentNode&&(!c.status||400>c.status||600<c.status)){if((b=e.fix(b,!0,a))&&d)var b=b.replace(/url\\(\\s*?((?:\"|')?)(.+?)\\1\\s*?\\)/gi,function(b,a,c){return/^([a-z]{3,10}:|#)/i.test(c)?b:/^\\/\\//.test(c)?'url(\"'+f+c+'\")':/^\\//.test(c)?'url(\"'+h+c+'\")':/^\\?/.test(c)?'url(\"'+k+c+'\")':'url(\"'+d+c+'\")'}),n=d.replace(/([\\\\\\^\\$*+[\\]?{}.=!:(|)])/g,\"\\\\$1\"),b=b.replace(RegExp(\"\\\\b(behavior:\\\\s*?url\\\\('?\\\"?)\"+n,\"gi\"),\"$1\");n=document.createElement(\"style\");n.textContent=\r\n    \"/*# sourceURL=\"+a.getAttribute(\"href\")+\" */\\n/*@ sourceURL=\"+a.getAttribute(\"href\")+\" */\\n\"+b;n.media=a.media;n.disabled=a.disabled;n.setAttribute(\"data-href\",a.getAttribute(\"href\"));a.id&&(n.id=a.id);g.insertBefore(n,a);g.removeChild(a);n.media=a.media}};try{c.open(\"GET\",b),c.send(null)}catch(p){\"undefined\"!=typeof XDomainRequest&&(c=new XDomainRequest,c.onerror=c.onprogress=function(){},c.onload=l,c.open(\"GET\",b),c.send(null))}a.setAttribute(\"data-inprogress\",\"\")},styleElement:function(a){if(!a.hasAttribute(\"data-noprefix\")){var b=\r\n    a.disabled;a.textContent=e.fix(a.textContent,!0,a);a.disabled=b}},styleAttribute:function(a){var b=a.getAttribute(\"style\"),b=e.fix(b,!1,a);a.setAttribute(\"style\",b)},process:function(){m('link[rel=\"stylesheet\"]:not([data-inprogress])').forEach(StyleFix.link);m(\"style\").forEach(StyleFix.styleElement);m(\"[style]\").forEach(StyleFix.styleAttribute)},register:function(a,b){(e.fixers=e.fixers||[]).splice(void 0===b?e.fixers.length:b,0,a)},fix:function(a,b,d){if(e.fixers)for(var f=0;f<e.fixers.length;f++)a=\r\n    e.fixers[f](a,b,d)||a;return a},camelCase:function(a){return a.replace(/-([a-z])/g,function(b,a){return a.toUpperCase()}).replace(\"-\",\"\")},deCamelCase:function(a){return a.replace(/[A-Z]/g,function(b){return\"-\"+b.toLowerCase()})}};(function(){setTimeout(function(){m('link[rel=\"stylesheet\"]').forEach(StyleFix.link)},10);document.addEventListener(\"DOMContentLoaded\",StyleFix.process,!1)})()}})();\r\n    (function(m){function e(b,d,f,h,k){b=a[b];b.length&&(b=RegExp(d+\"(\"+b.join(\"|\")+\")\"+f,\"gi\"),k=k.replace(b,h));return k}if(window.StyleFix&&window.getComputedStyle){var a=window.PrefixFree={prefixCSS:function(b,d,f){var h=a.prefix;-1<a.functions.indexOf(\"linear-gradient\")&&(b=b.replace(/(\\s|:|,)(repeating-)?linear-gradient\\(\\s*(-?\\d*\\.?\\d*)deg/ig,function(b,a,d,f){return a+(d||\"\")+\"linear-gradient(\"+(90-f)+\"deg\"}));b=e(\"functions\",\"(\\\\s|:|,)\",\"\\\\s*\\\\(\",\"$1\"+h+\"$2(\",b);b=e(\"keywords\",\"(\\\\s|:)\",\"(\\\\s|;|\\\\}|$)\",\r\n    \"$1\"+h+\"$2$3\",b);b=e(\"properties\",\"(^|\\\\{|\\\\s|;)\",\"\\\\s*:\",\"$1\"+h+\"$2:\",b);if(a.properties.length){var k=RegExp(\"\\\\b(\"+a.properties.join(\"|\")+\")(?!:)\",\"gi\");b=e(\"valueProperties\",\"\\\\b\",\":(.+?);\",function(a){return a.replace(k,h+\"$1\")},b)}d&&(b=e(\"selectors\",\"\",\"\\\\b\",a.prefixSelector,b),b=e(\"atrules\",\"@\",\"\\\\b\",\"@\"+h+\"$1\",b));b=b.replace(RegExp(\"-\"+h,\"g\"),\"-\");return b=b.replace(/-\\*-(?=[a-z]+)/gi,a.prefix)},property:function(b){return(0<=a.properties.indexOf(b)?a.prefix:\"\")+b},value:function(b,d){b=\r\n    e(\"functions\",\"(^|\\\\s|,)\",\"\\\\s*\\\\(\",\"$1\"+a.prefix+\"$2(\",b);b=e(\"keywords\",\"(^|\\\\s)\",\"(\\\\s|$)\",\"$1\"+a.prefix+\"$2$3\",b);0<=a.valueProperties.indexOf(d)&&(b=e(\"properties\",\"(^|\\\\s|,)\",\"($|\\\\s|,)\",\"$1\"+a.prefix+\"$2$3\",b));return b},prefixSelector:function(b){return a.selectorMap[b]||b},prefixProperty:function(b,d){var f=a.prefix+b;return d?StyleFix.camelCase(f):f}};(function(){var b={},d=[],f=getComputedStyle(document.documentElement,null),h=document.createElement(\"div\").style,k=function(a){if(\"-\"===\r\n    a.charAt(0)){d.push(a);a=a.split(\"-\");var c=a[1];for(b[c]=++b[c]||1;3<a.length;)a.pop(),c=a.join(\"-\"),StyleFix.camelCase(c)in h&&-1===d.indexOf(c)&&d.push(c)}};if(f&&0<f.length)for(var g=0;g<f.length;g++)k(f[g]);else for(var c in f)k(StyleFix.deCamelCase(c));var g=0,e,p;for(p in b)f=b[p],g<f&&(e=p,g=f);a.prefix=\"-\"+e+\"-\";a.Prefix=StyleFix.camelCase(a.prefix);a.properties=[];for(g=0;g<d.length;g++)c=d[g],0===c.indexOf(a.prefix)&&(e=c.slice(a.prefix.length),StyleFix.camelCase(e)in h||a.properties.push(e));\r\n    !(\"Ms\"!=a.Prefix||\"transform\"in h||\"MsTransform\"in h)&&\"msTransform\"in h&&a.properties.push(\"transform\",\"transform-origin\");a.properties.sort()})();(function(){function b(a,b){e[b]=\"\";e[b]=a;return!!e[b]}var d={\"linear-gradient\":{property:\"backgroundImage\",params:\"red, teal\"},calc:{property:\"width\",params:\"1px + 5%\"},element:{property:\"backgroundImage\",params:\"#foo\"},\"cross-fade\":{property:\"backgroundImage\",params:\"url(a.png), url(b.png), 50%\"},\"image-set\":{property:\"backgroundImage\",params:\"url(a.png) 1x, url(b.png) 2x\"}};\r\n    d[\"repeating-linear-gradient\"]=d[\"repeating-radial-gradient\"]=d[\"radial-gradient\"]=d[\"linear-gradient\"];var f={initial:\"color\",grab:\"cursor\",grabbing:\"cursor\",\"zoom-in\":\"cursor\",\"zoom-out\":\"cursor\",box:\"display\",flexbox:\"display\",\"inline-flexbox\":\"display\",flex:\"display\",\"inline-flex\":\"display\",grid:\"display\",\"inline-grid\":\"display\",\"max-content\":\"width\",\"min-content\":\"width\",\"fit-content\":\"width\",\"fill-available\":\"width\",\"contain-floats\":\"width\"};a.functions=[];a.keywords=[];var e=document.createElement(\"div\").style,\r\n    k;for(k in d){var g=d[k],c=g.property,g=k+\"(\"+g.params+\")\";!b(g,c)&&b(a.prefix+g,c)&&a.functions.push(k)}for(var l in f)c=f[l],!b(l,c)&&b(a.prefix+l,c)&&a.keywords.push(l)})();(function(){function b(a){h.textContent=a+\"{}\";return!!h.sheet.cssRules.length}var d={\":any-link\":null,\"::backdrop\":null,\":fullscreen\":null,\":full-screen\":\":fullscreen\",\"::placeholder\":null,\":placeholder\":\"::placeholder\",\"::input-placeholder\":\"::placeholder\",\":input-placeholder\":\"::placeholder\",\":read-only\":null,\":read-write\":null,\r\n    \"::selection\":null},e={keyframes:\"name\",viewport:null,document:'regexp(\".\")'};a.selectors=[];a.selectorMap={};a.atrules=[];var h=m.appendChild(document.createElement(\"style\")),k;for(k in d){var g=d[k]||k,c=k.replace(/::?/,function(b){return b+a.prefix});!b(g)&&b(c)&&(a.selectors.push(g),a.selectorMap[g]=c)}for(var l in e)d=l+\" \"+(e[l]||\"\"),!b(\"@\"+d)&&b(\"@\"+a.prefix+d)&&a.atrules.push(l);m.removeChild(h)})();a.valueProperties=[\"transition\",\"transition-property\",\"will-change\"];m.className+=\" \"+a.prefix;\r\n    StyleFix.register(a.prefixCSS)}})(document.documentElement);","/**\n * Less - Leaner CSS v4.1.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n            var self = this;\r\n            Object.defineProperty(this, 'currentFileInfo', {\r\n                get: function () { return self.fileInfo(); }\r\n            });\r\n            Object.defineProperty(this, 'index', {\r\n                get: function () { return self.getIndex(); }\r\n            });\r\n        }\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp(Math.round(c), 255);\r\n                    }).concat(clamp(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    var debugInfo = /** @class */ (function () {\r\n        function debugInfo(context, ctx, lineSeparator) {\r\n            var result = '';\r\n            if (context.dumpLineNumbers && !context.compress) {\r\n                switch (context.dumpLineNumbers) {\r\n                    case 'comments':\r\n                        result = debugInfo.asComment(ctx);\r\n                        break;\r\n                    case 'mediaquery':\r\n                        result = debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                    case 'all':\r\n                        result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        debugInfo.asComment = function (ctx) {\r\n            return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n        };\r\n        debugInfo.asMediaQuery = function (ctx) {\r\n            var filenameWithProtocol = ctx.debugInfo.fileName;\r\n            if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n                filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n            }\r\n            return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n                if (a == '\\\\') {\r\n                    a = '\\/';\r\n                }\r\n                return \"\\\\\" + a;\r\n            }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n        };\r\n        return debugInfo;\r\n    }());\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays$1() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArrays$1([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name', message: \"Recursive variable definition for \" + name, filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: \"variable \" + name + \" is undefined\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name', message: \"Recursive property reference for \" + name, filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: \"Property '\" + name + \"' is undefined\", filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name', message: \"variable \" + name + \" not found\", filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name', message: \"property \\\"\" + name.substr(1) + \"\\\" not found\", filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime', message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime', message: \"No matching definition was found for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: this.selector.toCSS().trim() + \" is undefined\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\r\n        Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\r\n        Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\r\n        Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\r\n        Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\r\n        Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\r\n        Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var error = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    error = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = error || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import?\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp$1(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number(h) % 360) / 360;\r\n                s = clamp$1(number(s));\r\n                l = clamp$1(number(l));\r\n                a = clamp$1(number(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number(h) % 360) / 360) * 360;\r\n            s = number(s);\r\n            v = number(v);\r\n            a = number(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp$1(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp$1(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp$1(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp$1(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f)) {\r\n            colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f$1 in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f$1)) {\r\n            mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number$1 = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument', message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number$1);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.1\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options;\r\n    var logger$1;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options.isFileProtocol ? options.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger$1.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options.isFileProtocol && !options.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options = opts;\r\n        logger$1 = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options$1 = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options$1[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options$1);\r\n    options$1.plugins = options$1.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options$1);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options$1.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options$1.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options$1.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* Font Face Observer v2.1.0 - © Bram Stein. License: BSD-3-Clause */ (function () {\n  \"use strict\";\n  var f,\n    g = [];\n  function l(a) {\n    g.push(a);\n    1 == g.length && f();\n  }\n  function m() {\n    for (; g.length; ) g[0](), g.shift();\n  }\n  f = function () {\n    setTimeout(m);\n  };\n  function n(a) {\n    this.a = p;\n    this.b = void 0;\n    this.f = [];\n    var b = this;\n    try {\n      a(\n        function (a) {\n          q(b, a);\n        },\n        function (a) {\n          r(b, a);\n        }\n      );\n    } catch (c) {\n      r(b, c);\n    }\n  }\n  var p = 2;\n  function t(a) {\n    return new n(function (b, c) {\n      c(a);\n    });\n  }\n  function u(a) {\n    return new n(function (b) {\n      b(a);\n    });\n  }\n  function q(a, b) {\n    if (a.a == p) {\n      if (b == a) throw new TypeError();\n      var c = !1;\n      try {\n        var d = b && b.then;\n        if (null != b && \"object\" == typeof b && \"function\" == typeof d) {\n          d.call(\n            b,\n            function (b) {\n              c || q(a, b);\n              c = !0;\n            },\n            function (b) {\n              c || r(a, b);\n              c = !0;\n            }\n          );\n          return;\n        }\n      } catch (e) {\n        c || r(a, e);\n        return;\n      }\n      a.a = 0;\n      a.b = b;\n      v(a);\n    }\n  }\n  function r(a, b) {\n    if (a.a == p) {\n      if (b == a) throw new TypeError();\n      a.a = 1;\n      a.b = b;\n      v(a);\n    }\n  }\n  function v(a) {\n    l(function () {\n      if (a.a != p)\n        for (; a.f.length; ) {\n          var b = a.f.shift(),\n            c = b[0],\n            d = b[1],\n            e = b[2],\n            b = b[3];\n          try {\n            0 == a.a\n              ? \"function\" == typeof c\n                ? e(c.call(void 0, a.b))\n                : e(a.b)\n              : 1 == a.a &&\n                (\"function\" == typeof d ? e(d.call(void 0, a.b)) : b(a.b));\n          } catch (h) {\n            b(h);\n          }\n        }\n    });\n  }\n  n.prototype.g = function (a) {\n    return this.c(void 0, a);\n  };\n  n.prototype.c = function (a, b) {\n    var c = this;\n    return new n(function (d, e) {\n      c.f.push([a, b, d, e]);\n      v(c);\n    });\n  };\n  function w(a) {\n    return new n(function (b, c) {\n      function d(c) {\n        return function (d) {\n          h[c] = d;\n          e += 1;\n          e == a.length && b(h);\n        };\n      }\n      var e = 0,\n        h = [];\n      0 == a.length && b(h);\n      for (var k = 0; k < a.length; k += 1) u(a[k]).c(d(k), c);\n    });\n  }\n  function x(a) {\n    return new n(function (b, c) {\n      for (var d = 0; d < a.length; d += 1) u(a[d]).c(b, c);\n    });\n  }\n  window.Promise ||\n    ((window.Promise = n),\n    (window.Promise.resolve = u),\n    (window.Promise.reject = t),\n    (window.Promise.race = x),\n    (window.Promise.all = w),\n    (window.Promise.prototype.then = n.prototype.c),\n    (window.Promise.prototype[\"catch\"] = n.prototype.g));\n})();\n\n  function l(a, b) {\n    document.addEventListener\n      ? a.addEventListener(\"scroll\", b, !1)\n      : a.attachEvent(\"scroll\", b);\n  }\n  function m(a) {\n    document.body\n      ? a()\n      : document.addEventListener\n      ? document.addEventListener(\"DOMContentLoaded\", function c() {\n          document.removeEventListener(\"DOMContentLoaded\", c);\n          a();\n        })\n      : document.attachEvent(\"onreadystatechange\", function k() {\n          if (\n            \"interactive\" == document.readyState ||\n            \"complete\" == document.readyState\n          )\n            document.detachEvent(\"onreadystatechange\", k), a();\n        });\n  }\n  function t(a) {\n    this.a = document.createElement(\"div\");\n    this.a.setAttribute(\"aria-hidden\", \"true\");\n    this.a.appendChild(document.createTextNode(a));\n    this.b = document.createElement(\"span\");\n    this.c = document.createElement(\"span\");\n    this.h = document.createElement(\"span\");\n    this.f = document.createElement(\"span\");\n    this.g = -1;\n    this.b.style.cssText =\n      \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.c.style.cssText =\n      \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.f.style.cssText =\n      \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.h.style.cssText =\n      \"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";\n    this.b.appendChild(this.h);\n    this.c.appendChild(this.f);\n    this.a.appendChild(this.b);\n    this.a.appendChild(this.c);\n  }\n  function u(a, b) {\n    a.a.style.cssText =\n      \"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\" +\n      b +\n      \";\";\n  }\n  function z(a) {\n    var b = a.a.offsetWidth,\n      c = b + 100;\n    a.f.style.width = c + \"px\";\n    a.c.scrollLeft = c;\n    a.b.scrollLeft = a.b.scrollWidth + 100;\n    return a.g !== b ? ((a.g = b), !0) : !1;\n  }\n  function A(a, b) {\n    function c() {\n      var a = k;\n      z(a) && a.a.parentNode && b(a.g);\n    }\n    var k = a;\n    l(a.b, c);\n    l(a.c, c);\n    z(a);\n  }\n  function B(a, b) {\n    var c = b || {};\n    this.family = a;\n    this.style = c.style || \"normal\";\n    this.weight = c.weight || \"normal\";\n    this.stretch = c.stretch || \"normal\";\n    this.load = function (a, b) {\n        var c = this,\n          k = a || \"BESbswy\",\n          r = 0,\n          n = b || 3e3,\n          H = new Date().getTime();\n        return new Promise(function (a, b) {\n          if (J() && !G()) {\n            var M = new Promise(function (a, b) {\n                function e() {\n                  new Date().getTime() - H >= n\n                    ? b(Error(\"\" + n + \"ms timeout exceeded loading fonts\"))\n                    : document.fonts\n                        .load(L(c, '\"' + c.family + '\"'), k)\n                        .then(function (c) {\n                          1 <= c.length ? a() : setTimeout(e, 25);\n                        }, b);\n                }\n                e();\n              }),\n              N = new Promise(function (a, c) {\n                r = setTimeout(function () {\n                  c(Error(\"\" + n + \"ms timeout exceeded loading fonts\"));\n                }, n);\n              });\n            Promise.race([N, M]).then(function () {\n              clearTimeout(r);\n              a(c);\n            }, b);\n          } else\n            m(function () {\n              function v() {\n                var b;\n                if (\n                  (b =\n                    (-1 != f && -1 != g) ||\n                    (-1 != f && -1 != h) ||\n                    (-1 != g && -1 != h))\n                )\n                  (b = f != g && f != h && g != h) ||\n                    (null === C &&\n                      ((b = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(\n                        window.navigator.userAgent\n                      )),\n                      (C =\n                        !!b &&\n                        (536 > parseInt(b[1], 10) ||\n                          (536 === parseInt(b[1], 10) &&\n                            11 >= parseInt(b[2], 10))))),\n                    (b =\n                      C &&\n                      ((f == w && g == w && h == w) ||\n                        (f == x && g == x && h == x) ||\n                        (f == y && g == y && h == y)))),\n                    (b = !b);\n                b &&\n                  (d.parentNode && d.parentNode.removeChild(d),\n                  clearTimeout(r),\n                  a(c));\n              }\n              function I() {\n                if (new Date().getTime() - H >= n)\n                  d.parentNode && d.parentNode.removeChild(d),\n                    b(Error(\"\" + n + \"ms timeout exceeded loading fonts\"));\n                else {\n                  var a = document.hidden;\n                  if (!0 === a || void 0 === a)\n                    (f = e.a.offsetWidth),\n                      (g = p.a.offsetWidth),\n                      (h = q.a.offsetWidth),\n                      v();\n                  r = setTimeout(I, 50);\n                }\n              }\n              var e = new t(k),\n                p = new t(k),\n                q = new t(k),\n                f = -1,\n                g = -1,\n                h = -1,\n                w = -1,\n                x = -1,\n                y = -1,\n                d = document.createElement(\"div\");\n              d.dir = \"ltr\";\n              u(e, L(c, \"sans-serif\"));\n              u(p, L(c, \"serif\"));\n              u(q, L(c, \"monospace\"));\n              d.appendChild(e.a);\n              d.appendChild(p.a);\n              d.appendChild(q.a);\n              document.body.appendChild(d);\n              w = e.a.offsetWidth;\n              x = p.a.offsetWidth;\n              y = q.a.offsetWidth;\n              I();\n              A(e, function (a) {\n                f = a;\n                v();\n              });\n              u(e, L(c, '\"' + c.family + '\",sans-serif'));\n              A(p, function (a) {\n                g = a;\n                v();\n              });\n              u(p, L(c, '\"' + c.family + '\",serif'));\n              A(q, function (a) {\n                h = a;\n                v();\n              });\n              u(q, L(c, '\"' + c.family + '\",monospace'));\n            });\n        });\n      };\n  }\n  var C = null,\n    D = null,\n    E = null,\n    F = null;\n  function G() {\n    if (null === D)\n      if (J() && /Apple/.test(window.navigator.vendor)) {\n        var a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(\n          window.navigator.userAgent\n        );\n        D = !!a && 603 > parseInt(a[1], 10);\n      } else D = !1;\n    return D;\n  }\n  function J() {\n    null === F && (F = !!document.fonts);\n    return F;\n  }\n  function K() {\n    if (null === E) {\n      var a = document.createElement(\"div\");\n      try {\n        a.style.font = \"condensed 100px sans-serif\";\n      } catch (b) {}\n      E = \"\" !== a.style.font;\n    }\n    return E;\n  }\n  function L(a, b) {\n    return [a.style, a.weight, K() ? a.stretch : \"\", \"100px\", b].join(\" \");\n  }\n \nexport default B;\n","const trimMarks = document.body.dataset.trim == \"true\" ? true : false;\n\nconst imageCompression = () => {\n  var imageCompressEl = document.querySelectorAll(\"[data-custom-compression]\");\n  var editorString = \"?qual=editor\";\n\n  function checkURL(editorString, url) {\n    if (url.includes(editorString) || url.includes(\".svg\")) return false;\n    return true;\n  }\n\n  imageCompressEl.forEach((el) => {\n    //Non Repo Images with data-custom-compression on img element itself\n    var imgSrc = el.getAttribute(\"src\");\n    console.log(imgSrc);\n    if (imgSrc != null) {\n      //src attribute exists assume that this is an <img> element\n      if (!checkURL(editorString, imgSrc)) return;\n      el.setAttribute(\"src\", imgSrc + editorString);\n    } else {\n      var imgEl = el.querySelector(\"img\");\n      if (imgEl == null) return;\n      var imgURL = imgEl.getAttribute(\"src\");\n      if (!checkURL(editorString, imgURL)) return;\n      imgEl.setAttribute(\"src\", imgURL + editorString);\n\n      var bkgImgEl = el.querySelector(\".outfit-resizable-background\");\n      if (bkgImgEl == null) return;\n      var bkgUrl = bkgImgEl.style.backgroundImage\n        .slice(4, -1)\n        .replace(/\"/g, \"\");\n      if (!checkURL(editorString, bkgUrl)) return;\n      bkgImgEl.style.backgroundImage = `url(\"${bkgUrl}${editorString}\")`;\n    }\n  });\n}\n\nconst setOutfitState = () => {\n  return new Promise((resolve) => {\n    var mode = window.location.href.indexOf(\"exports\") > -1 ? \"export\" : false;\n    mode =\n      !mode && window.location.href.indexOf(\"templates\") > -1\n        ? \"template\"\n        : mode;\n    mode =\n      !mode && window.location.href.indexOf(\"projects\") > -1\n        ? \"document\"\n        : mode;\n    mode =\n      !mode && window.location.href.indexOf(\"preview\") > -1 ? \"preview\" : mode;\n    mode =\n      !mode && window.location.href.indexOf(\"localhost\") > -1 ? \"local\" : mode;\n    if (!mode) {\n      mode = \"error\";\n    }\n\n    document.body.setAttribute(\"document-state\", mode);\n    window.state = mode;\n    resolve(mode);\n  });\n};\n\nfunction blockRender(v) {\n  document.querySelector(\"body\").innerHTML = `<style>html, body { background: #111820; color: white; font-family: sans-serif; font-size: 0.5rem;}  body { margin: 1rem; width: 80%!important;} p { font-size: 0.4rem; } </style>\n  <h4>⚠️ Please enable <code>allowLegacyRendering: true</code>\n   on the boilerplate or update renderer to version 2.1 or 1.1 </h4>\n   <p>Please contact support if you see this message saying that this template is using renderer ${v}</p>`\n}\n\nfunction pageHeightSetup(trimMarks, allowLegacyRendering) {\n  let agent = navigator.userAgent;\n  if (agent.includes('(OPTION 2.1;')) {\n    console.info(\"Renderer 2.1 Set\");\n    if (trimMarks) {\n      return \"calc(100vh - 1px)\";\n    }\n  } else if (agent.includes('(OPTION 1.1)')) {\n    console.info(\"Renderer 1.1 Set\");\n    return \"100vh\";\n  } else if (agent.includes('(OPTION 1.0)')) {\n    console.warn(\"Renderer set to 1.0. Please update to 1.1\");\n    if (!allowLegacyRendering) {\n      blockRender('1.0')\n    }\n    return \"100vh\";\n  } else if (agent.includes('(OPTION 2.0;')) {\n    console.warn(\"Renderer 2.0 Set. Please update to 2.1\");\n    if (!allowLegacyRendering) {\n      blockRender('2.0')\n    }\n    if (trimMarks) {\n      return \"calc(100vh - 1px)\";\n    }\n    return \"100vh\";\n  } else {\n    // console.error(\"Renderer Not Set\");\n    return \"100vh\";\n  }\n}\n\n// Fix for the resizable background images - fullscreen and digital vairaitons only\nconst addCrop = (allowLegacyRendering) => {\n  return new Promise((resolve) => {\n    // crop and bleed\n    var cropSVG =\n      '<svg class=\"crop-mark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.6 21.6\" xmlns:v=\"https://vecta.io/nano\"><path d=\"M21 15V0m-6 21H0\" fill=\"none\" stroke=\"#000\" stroke-width=\"0.25\" stroke-miterlimit=\"10.0131\"/></svg>';\n\n    let pageHeight = pageHeightSetup(trimMarks, allowLegacyRendering);\n\n    document.querySelectorAll(\".page\").forEach((page) => {\n      page.style.height = pageHeight;\n      if (trimMarks) {\n        page.insertAdjacentHTML(\n          \"afterbegin\",\n          `<div class=\"crop-marks\">\n          <div class=\"crop-mark top-left\">${cropSVG}</div>\n          <div class=\"crop-mark top-right\">${cropSVG}</div>\n          <div class=\"crop-mark bottom-left\">${cropSVG}</div>\n          <div class=\"crop-mark bottom-right\">${cropSVG}</div>\n        </div>`\n        );\n      }\n    });\n\n    Array.prototype.slice\n      .call(document.querySelectorAll(\".bleed\"))\n      .forEach(function (bleed) {\n        bleed.style.cssText = trimMarks\n          ? \"position: absolute; top: 4.41mm; right: 4.41mm; bottom: 4.41mm; left: 4.41mm;\"\n          : \"position: absolute; top: -3mm; right: -3mm; bottom: -3mm; left: -3mm\";\n      });\n\n    document\n      .querySelectorAll(\"[data-trim='false'] .outfit-resizable-background\")\n      .forEach((el) => {\n        el.parentNode.style.left = \"0\";\n        el.parentNode.style.right = \"0\";\n        el.parentNode.style.top = \"0\";\n        el.parentNode.style.bottom = \"0\";\n        el.parentNode.style.width = \"100%\";\n        el.parentNode.style.height = \"100%\";\n      });\n    resolve();\n  });\n};\n\nconst setSize = () => {\n  return new Promise((resolve) => {\n    const vw =\n      (trimMarks ? window.innerWidth : window.innerWidth + 57.62) / 100;\n    const vh =\n      (trimMarks ? window.innerHeight : window.innerHeight + 57.62) / 100;\n    const vmin = Math.min(vw, vh);\n    const vmax = Math.max(vw, vh);\n\n    // Saving the preliminary font size calculation\n    const preliminaryCalc = vmin * 2 + vmax * 1.4 + vh * 2;\n\n    // Checking if the document is currently in export mode\n    const isExportMode = window.location.href.indexOf(\"exports\") > -1;\n\n    // Checking if the active browser is Firefox\n    const isFirefox = navigator.userAgent.includes(\"Firefox\");\n\n    // Grabbing the data-export-font-reduce-by-percent from the body element\n    const exportReduceVal =\n      document.body.dataset.reduceExportFontSizeByPercent === undefined\n        ? 0\n        : parseFloat(document.body.dataset.reduceExportFontSizeByPercent);\n\n    // Grabbing the data-firefox-font-reduce-by-percent from the body element\n    const firefoxReduceVal =\n      document.body.dataset.reduceFirefoxFontSizeByPercent === undefined\n        ? 0\n        : parseFloat(document.body.dataset.reduceFirefoxFontSizeByPercent);\n\n    const exportModeFontSize =\n      preliminaryCalc - (exportReduceVal / 100) * preliminaryCalc;\n    const firefoxFontSize =\n      preliminaryCalc - (firefoxReduceVal / 100) * preliminaryCalc;\n\n    // Reducing the preliminaryCalc value by reduceVal in export mode and in Firefox preview mode\n    const finalCalc = isExportMode\n      ? exportModeFontSize\n      : isFirefox\n      ? firefoxFontSize\n      : preliminaryCalc;\n\n    document.documentElement.style.fontSize = `${finalCalc}px`;\n\n    resolve();\n  });\n};\n\nexport { setSize, addCrop, pageHeightSetup, setOutfitState, imageCompression };\n","import './polyfills.js'\r\nfunction dynamicReplace(selector = null, data = null) {\r\n  if (selector != null && data != null) \r\n  { \r\n    dynamicReplaceMulti(selector, data);\r\n  } else {\r\n    dynamicReplaceSingle();\r\n  }\r\n}\r\n\r\nfunction dynamicReplaceMulti(target, data) {\r\n  const targets = document.querySelectorAll(target);\r\n  if (targets.length === 0) return;\r\n\r\n  targets.forEach(function (target) {\r\n    data.forEach(function (item) {\r\n      const inputValue = item[0];\r\n      const lookup = item[1];\r\n\r\n      if (\r\n        target.innerText.includes(lookup) != -1 &&\r\n        (inputValue != \"\" || inputValue.length != 0)\r\n      ) {\r\n        target.innerHTML = target.innerHTML.replaceAll(lookup, inputValue); //If found replace\r\n      } else {\r\n        let lookupSpan = `<span class='lookup-value'>${lookup}</span>`;\r\n        // console.log(target.innerHTML);\r\n        let temp = target.innerHTML.split(lookupSpan);\r\n        temp = temp.map((x) => x.replaceAll(lookup, lookupSpan));\r\n        target.innerHTML = temp.join(lookupSpan);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction dynamicReplaceSingle() {\r\n  const elements = document.querySelectorAll(\"[data-replace-from]\");\r\n  if (elements.length === 0) return;\r\n\r\n  elements.forEach((el) => {\r\n    const text = el.innerText;\r\n    const html = el.innerHTML;\r\n    const lookup = el.dataset.replaceFrom;\r\n    const replace = el.dataset.replaceTo;\r\n\r\n    if (text.search(lookup) != -1 && (replace != \"\" || replace.length != 0)) {\r\n      el.innerHTML = html.replaceAll(lookup, replace);\r\n    }\r\n  });\r\n}\r\n\r\nexport { dynamicReplace, dynamicReplaceSingle, dynamicReplaceMulti }","export default function setupPlaceholder(placeholderVisibility, placeholderImages) {\n    // If array length < 1 or the first item is \"\" or null or undefined\n    if (\n      placeholderImages.length < 1 ||\n      placeholderImages[0] == \"\" ||\n      placeholderImages[0] == null ||\n      placeholderImages[0] == undefined ||\n      placeholderVisibility == \"hide\"\n    )\n      return;\n  \n    var pages = document.querySelectorAll(\".page .container\");\n    pages.forEach((page, index) => {\n      let placeholderImage = placeholderImages[index];\n      if (\n        placeholderImage == \"\" ||\n        placeholderImage == null ||\n        placeholderImage == undefined\n      )\n        placeholderImage = placeholderImages[0];\n  \n      let placeholderStructure = `<div class=\"placeholderImage\" style=\"background-image: url('${placeholderImage}')\"></div>`;\n      page.insertAdjacentHTML(\"afterbegin\", placeholderStructure);\n    });\n  }","// count the number of lines inside of the current direct element\r\nfunction countLines(target) {\r\n  let testBox = document.createElement(\"span\");\r\n  testBox.style.fontSize = target.style.fontSize;\r\n  testBox.style.display = \"inline-block\";\r\n  testBox.innerText = \"⠀\";\r\n  target.appendChild(testBox);\r\n  let oneLineHeight = innerHeight(testBox);\r\n  testBox.remove();\r\n  let lines = innerHeight(target) / oneLineHeight;\r\n  target.dataset.lineCount = lines; // adds property for CSS targeting\r\n  return lines;\r\n}\r\n\r\n// Calculate height without padding.\r\nfunction innerHeight(el) {\r\n  var style = window.getComputedStyle(el, null);\r\n  var height = parseFloat(style.getPropertyValue(\"height\"));\r\n  var box_sizing = style.getPropertyValue(\"box-sizing\");\r\n  if (box_sizing == \"border-box\") {\r\n    var padding_top = parseFloat(style.getPropertyValue(\"padding-top\"));\r\n    var padding_bottom = parseFloat(style.getPropertyValue(\"padding-bottom\"));\r\n    var border_top = parseFloat(style.getPropertyValue(\"border-top-width\"));\r\n    var border_bottom = parseFloat(\r\n      style.getPropertyValue(\"border-bottom-width\")\r\n    );\r\n    height = height - padding_top - padding_bottom - border_top - border_bottom;\r\n  }\r\n  return height;\r\n}\r\n\r\n// Calculate width without padding.\r\nfunction innerWidth(el) {\r\n  var style = window.getComputedStyle(el, null);\r\n  var width = parseFloat(style.getPropertyValue(\"width\"));\r\n  var box_sizing = style.getPropertyValue(\"box-sizing\");\r\n  if (box_sizing == \"border-box\") {\r\n    var padding_left = parseFloat(style.getPropertyValue(\"padding-left\"));\r\n    var padding_right = parseFloat(style.getPropertyValue(\"padding-right\"));\r\n    var border_left = parseFloat(style.getPropertyValue(\"border-left-width\"));\r\n    var border_right = parseFloat(style.getPropertyValue(\"border-right-width\"));\r\n    width = width - padding_left - padding_right - border_left - border_right;\r\n  }\r\n  return width;\r\n}\r\n\r\nfunction maxLineCheck(orientation = \"portrait\") {\r\n  const isExportMode = window.location.href.indexOf(\"exports\") > -1;\r\n  const isLocalDev = window.location.href.indexOf(\"localhost\") > -1;\r\n  const preventExportOverflow =\r\n    document.body.dataset.preventExportOverflow === \"true\";\r\n  const isProjectKit = isLocalDev\r\n    ? undefined\r\n    : window.parent.document.querySelector(\".preview-frame\");\r\n\r\n  if ((isExportMode && preventExportOverflow) || isProjectKit) return;\r\n\r\n  const textBlocks = document.querySelectorAll(\"[data-max-line]\");\r\n\r\n  textBlocks.forEach((block) => {\r\n    const lineCount = countLines(block);\r\n    // Getting the data-max-line attribute value (max number of lines allowed) and letting the number of an alt if the page is landscape\r\n    const maxLine =\r\n      orientation == \"portrait\"\r\n        ? block.dataset.maxLine\r\n        : block.dataset.maxLineAlt || block.dataset.maxLine;\r\n\r\n    lineCount > maxLine\r\n      ? block.classList.add(\"overflow\")\r\n      : block.classList.remove(\"overflow\");\r\n  });\r\n  return true;\r\n}\r\n\r\n/**\r\n*Detailed instruction can be found here:\r\n https://github.com/aleks-frontend/max-height-check\r\n*/\r\nfunction maxHeightCheck(variation = \"primary\") {\r\n  const isExportMode = window.location.href.indexOf(\"exports\") > -1;\r\n  const isLocalDev = window.location.href.indexOf(\"localhost\") > -1;\r\n  const preventExportOverflow =\r\n    document.body.dataset.preventExportOverflow === \"true\";\r\n  const isProjectKit = isLocalDev\r\n    ? undefined\r\n    : window.parent.document.querySelector(\".preview-frame\");\r\n\r\n  if ((isExportMode && preventExportOverflow) || isProjectKit) return;\r\n\r\n  const textBlocks = document.querySelectorAll(\"[data-max-height]\");\r\n\r\n  textBlocks.forEach((block) => {\r\n    const dynamicCheck =\r\n      block.dataset.maxHeight == \"dynamic\" ||\r\n      block.dataset.maxHeightDynamic == \"true\";\r\n    if (dynamicCheck) dynamicAssign(block);\r\n\r\n    const cssCheck = block.dataset.maxHeight == \"css\";\r\n    const bodyComputedStyle = window.getComputedStyle(document.body);\r\n    const blockHeight = block.scrollHeight;\r\n    const unit = block.dataset.maxHeightUnit || \"px\";\r\n    const maxHeightAlt = block.dataset.maxHeightAlt || block.dataset.maxHeight;\r\n    let maxHeight =\r\n      variation == \"primary\" ? block.dataset.maxHeight : maxHeightAlt;\r\n\r\n    if (cssCheck) {\r\n      const computedBlockStyle = window.getComputedStyle(block);\r\n      maxHeight = parseFloat(computedBlockStyle.maxHeight);\r\n    } else {\r\n      // Setting the element's max-height\r\n      block.style.maxHeight = maxHeight + unit;\r\n\r\n      // Recalculating maxHeight in case 'rem' is set as a unit\r\n      if (unit == \"rem\")\r\n        maxHeight = maxHeight * parseFloat(bodyComputedStyle.fontSize);\r\n    }\r\n\r\n    // Adding an 'overflow' class to an element if it's offset height exceedes the max-line-height\r\n    blockHeight > maxHeight\r\n      ? block.classList.add(\"overflow\")\r\n      : block.classList.remove(\"overflow\");\r\n  });\r\n}\r\n\r\nfunction dynamicAssign(element) {\r\n  const container = element.parentNode;\r\n  container.style.overflow = \"hidden\";\r\n  const containerComputed = {\r\n    height: parseFloat(window.getComputedStyle(container).height),\r\n    top: parseFloat(window.getComputedStyle(container).paddingTop),\r\n    bottom: parseFloat(window.getComputedStyle(container).paddingBottom),\r\n  };\r\n  const containerHeight = Math.floor(\r\n    containerComputed.height - containerComputed.top - containerComputed.bottom\r\n  );\r\n  const subtrahends = [...container.querySelectorAll(\".js-subtrahend\")];\r\n\r\n  const subtrahendsHeight = subtrahends.reduce((totalHeight, subtrahend) => {\r\n    const subtrahendMargins = {\r\n      top: parseFloat(window.getComputedStyle(subtrahend).marginTop),\r\n      bottom: parseFloat(window.getComputedStyle(subtrahend).marginBottom),\r\n    };\r\n    return (\r\n      totalHeight +\r\n      subtrahend.offsetHeight +\r\n      subtrahendMargins.top +\r\n      subtrahendMargins.bottom\r\n    );\r\n  }, 0);\r\n\r\n  const dynamicHeight = containerHeight - subtrahendsHeight;\r\n\r\n  element.dataset.maxHeightDynamic = \"true\";\r\n  element.dataset.maxHeight = dynamicHeight;\r\n  container.style.overflow = \"visible\";\r\n}\r\n\r\n// Adding limit for the word length\r\nfunction charLimit() {\r\n  const elements = document.querySelectorAll(\"[data-char-limit]\");\r\n\r\n  elements.forEach((element) => {\r\n    const limit = element.dataset.charLimit;\r\n\r\n    if (element == null) {\r\n      return;\r\n    }\r\n    var tokenValue = element.querySelectorAll(\".token-value\");\r\n\r\n    if (tokenValue.length != 0) {\r\n      element = tokenValue.item(0);\r\n    }\r\n    var code = element.innerText;\r\n    if (code.length > limit) {\r\n      // Check Token Again\r\n      if (tokenValue.length != 0) {\r\n        element.parentNode.classList.add(\"overflow\");\r\n      } else {\r\n        element.classList.add(\"overflow\");\r\n      }\r\n    } else {\r\n      // Check Token Again\r\n      if (tokenValue.length != 0) {\r\n        element.parentNode.classList.remove(\"overflow\");\r\n      } else {\r\n        element.classList.remove(\"overflow\");\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport { charLimit, dynamicAssign, maxHeightCheck, maxLineCheck, innerWidth, innerHeight, countLines }","import { innerWidth, innerHeight } from './limiters.js'\n/**\n * textFit v3.1.0\n * Previously known as jQuery.textFit\n * 11/2014 by STRML (strml.github.com)\n * MIT License\n *\n * To use: textFit(document.getElementById('target-div'), options);\n *\n * Will make the *text* content inside a container scale to fit the container\n * The container is required to have a set width and height\n * Uses binary search to fit text with minimal layout calls.\n * Version 2.0 does not use jQuery.\n */\n/* global define:true, document:true, window:true, HTMLElement:true*/\n\n// (function (root, factory) {\n//   \"use strict\";\n\n//   // UMD shim\n//   if (typeof define === \"function\" && define.amd) {\n//     // AMD\n//     define([], factory);\n//   } else if (typeof exports === \"object\") {\n//     // Node/CommonJS\n//     module.exports = factory();\n//   } else {\n//     // Browser\n//     root.textFit = factory();\n//   }\n// })(typeof global === \"object\" ? global : this, function () {\n//   \"use strict\";\n\n  var defaultSettings = {\n    alignVert: false, // if true, textFit will align vertically using css tables\n    alignHoriz: false, // if true, textFit will set text-align: center\n    multiLine: false, // if true, textFit will not set white-space: no-wrap\n    stopOverflow: false, // if true, a error we be thrown if the content is overflowing\n    maxLine: false, // if true, textFit will throw and error if the text is over the supplied number of lines\n    detectMultiLine: true, // disable to turn off automatic multi-line sensing\n    fontUnit: \"px\", // what unit should the final font be. using rems or mm is sometimes useful\n    fontChangeSize: 0.1, // how much should the font size by ajusted by each time. 0.1 and 0.01 is useful for when using a rem font unit\n    minFontSize: 6,\n    display: \"inline-block\", // in case you need to change this\n    maxFontSize: 80,\n    reProcess: true, // if true, textFit will re-process already-fit nodes. Set to 'false' for better performance\n    widthOnly: false, // if true, textFit will fit text to element width, regardless of text height\n    alignVertWithFlexbox: false, // if true, textFit will use flexbox for vertical alignment\n  };\n\n  export default function textFit(els, options) {\n    if (!options) options = {};\n\n    // Extend options.\n    var settings = {};\n    for (var key in defaultSettings) {\n      if (options.hasOwnProperty(key)) {\n        settings[key] = options[key];\n      } else {\n        settings[key] = defaultSettings[key];\n      }\n    }\n\n    // Convert jQuery objects into arrays\n    if (typeof els.toArray === \"function\") {\n      els = els.toArray();\n    }\n\n    // Support passing a single el\n    var elType = Object.prototype.toString.call(els);\n    if (\n      elType !== \"[object Array]\" &&\n      elType !== \"[object NodeList]\" &&\n      elType !== \"[object HTMLCollection]\"\n    ) {\n      els = [els];\n    }\n\n    // Process each el we've passed.\n    for (var i = 0; i < els.length; i++) {\n      try {\n        processItem(els[i], settings);\n      } catch (e) {\n        throw new Error(e.message);\n      }\n    }\n  };\n\n  /**\n   * The meat. Given an el, make the text inside it fit its parent.\n   * @param  {DOMElement} el       Child el.\n   * @param  {Object} settings     Options for fit.\n   */\n  function processItem(el, settings) {\n    if (!isElement(el) || (!settings.reProcess && el.getAttribute(\"textFitted\"))) {\n      return false;\n    }\n\n    // Set textFitted attribute so we know this was processed.\n    if (!settings.reProcess) {\n      el.setAttribute(\"textFitted\", 1);\n    }\n\n    var innerSpan, originalHeight, originalHTML, originalWidth;\n    var low, mid, high;\n\n    // Get element data.\n    originalHTML = el.innerHTML;\n    originalWidth = innerWidth(el);\n    originalHeight = innerHeight(el);\n\n    // Don't process if we can't find box dimensions\n    if (!originalWidth || (!settings.widthOnly && !originalHeight)) {\n      if (!settings.widthOnly)\n        throw new Error(\n          \"Set a static height and width on the target element \" +\n            el.outerHTML +\n            \" before using textFit!\"\n        );\n      else\n        throw new Error(\n          \"Set a static width on the target element \" +\n            el.outerHTML +\n            \" before using textFit!\"\n        );\n    }\n    // Add textFitted span inside this container.\n    if (originalHTML.indexOf(\"textFitted\") === -1) {\n      innerSpan = document.createElement(\"span\");\n      innerSpan.className = \"textFitted\";\n      // Inline block ensure it takes on the size of its contents, even if they are enclosed\n      // in other tags like <p>\n      innerSpan.style[\"display\"] = settings.display;\n      innerSpan.innerHTML = originalHTML;\n      el.innerHTML = \"\";\n      el.appendChild(innerSpan);\n    } else {\n      // Reprocessing.\n      innerSpan = el.querySelector(\"span.textFitted\");\n      // Remove vertical align if we're reprocessing.\n      if (hasClass(innerSpan, \"textFitAlignVert\")) {\n        innerSpan.className = innerSpan.className.replace(\n          \"textFitAlignVert\",\n          \"\"\n        );\n        innerSpan.style[\"height\"] = \"\";\n        el.className.replace(\"textFitAlignVertFlex\", \"\");\n      }\n    }\n\n    // Prepare & set alignment\n    if (settings.alignHoriz) {\n      el.style[\"text-align\"] = \"center\";\n      innerSpan.style[\"text-align\"] = \"center\";\n    }\n\n    // Check if this string is multiple lines\n    // Not guaranteed to always work if you use wonky line-heights\n    var multiLine = settings.multiLine;\n    if (\n      settings.detectMultiLine &&\n      !multiLine &&\n      innerSpan.scrollHeight >=\n        parseFloat(window.getComputedStyle(innerSpan)[\"font-size\"], 10) * 2\n    ) {\n      multiLine = true;\n    }\n    // If we're not treating this as a multiline string, don't var it wrap.\n    if (!multiLine) {\n      el.style[\"white-space\"] = \"nowrap\";\n    }\n\n    var maxLine = parseInt(el.dataset.maxLine || settings.maxLine);\n    var startingSize = innerSpan.style.fontSize;\n\n    low = settings.minFontSize;\n    high = settings.maxFontSize;\n    // Binary search for highest best fit\n    var size = low;\n    while (low <= high) {\n      mid = parseFloat(((high + low) / 2).toFixed(2));\n      innerSpan.style.fontSize = mid + settings.fontUnit;\n\n      var scrollWidth = innerSpan.scrollWidth <= originalWidth;\n      var scrollHeight =\n        settings.widthOnly || innerSpan.scrollHeight <= originalHeight;\n\n      // check if too many lines and if it is then we need to adjust the font size accordingly\n      var maxLines = false;\n      if (Number.isInteger(maxLine)) {\n        var lineCount = countLines(innerSpan);\n        maxLines = lineCount > maxLine;\n      }\n\n      if (scrollWidth && scrollHeight && !maxLines) {\n        size = mid;\n        low = mid + settings.fontChangeSize;\n      } else {\n        high = mid - settings.fontChangeSize;\n      }\n      // await injection point\n    }\n    if (startingSize !== size + settings.fontUnit) {\n      console.log(\"textFit font changed size: \", size + settings.fontUnit);\n    }\n    // updating font if differs:\n    if (innerSpan.style.fontSize != size + settings.fontUnit)\n      innerSpan.style.fontSize = size + settings.fontUnit;\n\n    // add the required CSS in order to stop overflows\n    if (Number.isInteger(maxLine) || settings.stopOverflow) {\n      if (!document.getElementById(\"overflowStyleSheet\")) {\n        var style = [\".overflow > span {\", \"overflow: hidden;\", \"}\"].join(\"\");\n\n        var css = document.createElement(\"style\");\n        css.type = \"text/css\";\n        css.id = \"overflowStyleSheet\";\n        css.innerHTML = style;\n        document.body.appendChild(css);\n      }\n\n      // detect if data max lines has been exceeded\n      if (Number.isInteger(maxLine)) {\n        el.classList.remove(\"overflow\");\n        delete el.dataset.customOverflowMessage;\n        var lineCount = countLines(innerSpan);\n        el.dataset.lineCount = lineCount;\n        if (lineCount > maxLine) {\n          el.dataset.customOverflowMessage =\n            \"Too much content has been added for the allowed space\";\n          el.classList.add(\"overflow\");\n        }\n      }\n      // detect if the content is larger than it's parent\n      if (settings.stopOverflow) {\n        var overflow = innerHeight(el) < innerSpan.scrollHeight;\n        if (overflow) {\n          el.classList.add(\"overflow\");\n        }\n      }\n    }\n    // Our height is finalized. If we are aligning vertically, set that up.\n    if (settings.alignVert) {\n      addStyleSheet();\n      var height = innerSpan.scrollHeight;\n      if (window.getComputedStyle(el)[\"position\"] === \"static\") {\n        el.style[\"position\"] = \"relative\";\n      }\n      if (!hasClass(innerSpan, \"textFitAlignVert\")) {\n        innerSpan.className = innerSpan.className + \" textFitAlignVert\";\n      }\n      innerSpan.style[\"height\"] = height + \"px\";\n      if (\n        settings.alignVertWithFlexbox &&\n        !hasClass(el, \"textFitAlignVertFlex\")\n      ) {\n        el.className = el.className + \" textFitAlignVertFlex\";\n      }\n    }\n  }\n\n  // Returns true if it is a DOM element\n  function isElement(o) {\n    return typeof HTMLElement === \"object\"\n      ? o instanceof HTMLElement //DOM2\n      : o &&\n          typeof o === \"object\" &&\n          o !== null &&\n          o.nodeType === 1 &&\n          typeof o.nodeName === \"string\";\n  }\n\n  function hasClass(element, cls) {\n    return (\" \" + element.className + \" \").indexOf(\" \" + cls + \" \") > -1;\n  }\n\n  // count the number of lines inside of the current direct element  \n  function countLines(target) {\n    var testBox = document.createElement(\"span\")\n    // testBox.setAttribute('style', target.getAttribute('style'));\n    testBox.style.fontSize = target.style.fontSize;\n    testBox.style.display = 'inline-block';\n    testBox.innerText = '⠀';\n    target.appendChild(testBox);\n    var oneLineHeight = innerHeight(testBox);\n    testBox.remove();\n    var lines = innerHeight(target) / oneLineHeight;\n    return lines;\n  }\n\n  // Better than a stylesheet dependency\n  function addStyleSheet() {\n    if (document.getElementById(\"textFitStyleSheet\")) return;\n    var style = [\n      \".textFitAlignVert{\",\n      \"position: absolute;\",\n      \"top: 0; right: 0; bottom: 0; left: 0;\",\n      \"margin: auto;\",\n      \"display: flex;\",\n      \"justify-content: center;\",\n      \"flex-direction: column;\",\n      \"}\",\n      \".textFitAlignVertFlex{\",\n      \"display: flex;\",\n      \"}\",\n      \".textFitAlignVertFlex .textFitAlignVert{\",\n      \"position: static;\",\n      \"}\",\n    ].join(\"\");\n\n    var css = document.createElement(\"style\");\n    css.type = \"text/css\";\n    css.id = \"textFitStyleSheet\";\n    css.innerHTML = style;\n    document.body.appendChild(css);\n  }\n// });\n","// import './less.js';\nvar less = require('less');\nimport './prefixfree.js';\nimport FontFaceObserver from './fontfaceobserver.js'\nimport { setSize, setOutfitState, addCrop, imageCompression } from './pageSetup.js'\nimport { dynamicReplace } from './replace.js';\nimport setupPlaceholder from './placeholder.js';\nimport textFit from './textFit.js';\nimport { charLimit, dynamicAssign, maxHeightCheck, maxLineCheck, innerWidth, innerHeight, countLines } from './limiters';\n\n// functionly that used to be in all-images-loaded-callback.js converted into a promise function\nconst imageLoadedCheck = (imagesLoaded) => {\n    return new Promise((imagesLoaded, imagesFailed) => { \n      Promise.all(Array.from(document.images).map(img => {\n        if (img.complete)\n            if (img.naturalHeight !== 0)\n                return Promise.resolve();\n            else\n                return Promise.reject(img);\n        return new Promise((resolve, reject) => {\n            img.addEventListener(\"load\", resolve);\n            img.addEventListener(\"error\", () => reject(img));\n        });\n      })).then(() => {\n        imagesLoaded('All images loaded!');\n      }, badImg => {\n        imagesFailed(`${badImg.src} didn't load`)\n      });\n    });\n  }\n  // ensure that the user has changed important tempalte metadata\n  const defaultsRemoved = () => {\n    return new Promise((resolve, reject) => {\n      let title = document.title;\n      if (title == '' || title == 'PUT_TEMPLATE_NAME_HERE') {\n        reject('Please put the name of the template in the title of the document')\n      }\n      let builtBy = document.querySelector('meta[name=\"template-built-by\"]').getAttribute('content');\n      if (builtBy == '' || builtBy == 'PUT_YOUR_NAME_HERE') {\n        reject('Please add your name in the document meta tags')\n      } \n      let scopeCard = document.querySelector('meta[name=\"scope\"]').getAttribute('content');\n      if (scopeCard == '' || scopeCard == 'DTB-PUT_JIRA_NUMBER_HERE') {\n        reject('Please add the scope card ID in the document meta tags')\n      }\n      let builtCard = document.querySelector('meta[name=\"build\"]').getAttribute('content');\n      if (builtCard == '' || builtCard == 'DTB-PUT_JIRA_NUMBER_HERE') {\n        reject('Please add the build card ID in the document meta tags')\n      } \n      if ([...document.head.childNodes].some(node => {\n        if (node && node.data && node.nodeType  == 8) {\n          return node.data.includes('Template Admin Build Instructions')\n        }\n      })) {\n        reject('Please remove the \"Template Admin Build Instructions\" comment from the top of the document')\n      }\n     \n      resolve();\n    });\n  }\n  // ensure that all fonts are loaded check\n  const fontsLoaded = (fontsListed) => {\n  return new Promise((resolve, reject) => {\n    if (!Array.isArray(fontsListed)) {\n        fontsListed = [fontsListed]\n    }\n    if (\n      !fontsListed ||\n      (fontsListed && fontsListed.length < 1) ||\n      fontsListed[0] === \"PUT_ALL_FONT_NAMES_HERE\"\n    ) {\n      reject(\"No fonts were put in the boilerplate config. For example { fonts: ['IBM Plex Sans'] }\");\n    } else {\n        Promise.all(fontsListed.map((font) => {\n            return new FontFaceObserver(font).load();\n          }))\n          .then(resolve)\n          .catch(reject);\n    }\n  });\n};\n\n// wait for the dom to laod or continue if it has already loaded\nconst domReady = new Promise((resolve, reject) => {\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"loaded\" ||\n    document.readyState === \"interactive\"\n  ) {\n    resolve();\n  } else {\n    window.addEventListener(\"DOMContentLoaded\", resolve);\n    window.addEventListener(\"error\", reject);\n  }\n});\n// wait for the window to laod or continue if it has already loaded\nconst winLoad = new Promise((resolve, reject) => {\n  if (document.readyState === \"complete\") {\n    resolve();\n  } else {\n    window.addEventListener(\"load\", resolve);\n    window.addEventListener(\"error\", reject);\n  }\n});\n\nconst loadCSS = (variables) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let res = await fetch('./css/styles.less');\n      res = await res.text();\n      let cssOutput = await less.render(res, { globalVars: variables })\n\n      let styleCode = document.createElement('link');\n      styleCode.setAttribute('type', 'text/css');\n      styleCode.setAttribute('rel', 'stylesheet');\n      styleCode.setAttribute('href', 'https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@2.5/css/main.min.css');\n      document.head.insertAdjacentElement('beforeEnd', styleCode);\n\n      document.head.insertAdjacentHTML('beforeEnd', `<style>${cssOutput.css}</style>`);\n\n      resolve()\n    } catch (e) { reject(e) }\n  });\n}\n\nexport default class boilerplate {\n  constructor({ \n    fonts = [],\n    ensureImagesLoad = true,\n    allowLegacyRendering = false,\n    reduceExportFontSizeByPercent = 0,\n    reduceFirefoxFontSizeByPercent = 0,\n    variables = {}\n   } = {}) {\n    this.fonts = fonts || '';\n    this.ensureImagesLoad = ensureImagesLoad;\n    this.allowLegacyRendering = allowLegacyRendering;\n    this.reduceExportFontSizeByPercent = reduceExportFontSizeByPercent;\n    this.reduceFirefoxFontSizeByPercent = reduceFirefoxFontSizeByPercent;\n    this.variables = variables;\n  }\n  async start() {\n    return new Promise((resolve, reject) => {\n      // all these checks need to be done before the tempalte code can be run \n      let checkList = [domReady, defaultsRemoved(), fontsLoaded(this.fonts), setSize(), setOutfitState(), addCrop(this.allowLegacyRendering)];\n      Promise.all(checkList)\n        .then(() => {\n          console.log(\"DOMContentLoaded + Fonts loaded\");\n  \n          window.addEventListener(\"resize\", () => {\n            setSize();\n            if (state !== \"preview\" && typeof onTextChange === \"function\") {\n              onTextChange();\n            }\n          });\n          if (state !== \"preview\" && typeof onTextChange === \"function\") {\n              onTextChange();\n          }\n          if (state === \"document\") {\n            imageCompression();\n          }\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  // send a event to stop a render \n  async completeRender() {\n    let checkList = [winLoad]\n    if (this.ensureImagesLoad) {\n      checkList.push(imageLoadedCheck)\n    }\n    Promise.all(checkList).then((values) => {\n      let loadTime = Date.now() - window.performance.timing.navigationStart\n      console.info(`Document has finished rendering in ${loadTime}ms`);\n      document.dispatchEvent(new Event('printready'))\n    }).catch(err => {\n        console.error(err);\n        throw '⚠️ Render failed for above reason ⤴️'\n    });\n  }\n\n  async dynamicReplace () {\n    dynamicReplace.apply(null, arguments);\n  }\n  async textFit () {\n    textFit.apply(null, arguments);\n  }\n  async setupPlaceholder () {\n    setupPlaceholder.apply(null, arguments);\n  }\n  async maxLineCheck () {\n    maxLineCheck.apply(null, arguments);\n  }\n  async maxHeightCheck () {\n    maxHeightCheck.apply(null, arguments);\n  }\n  async charLimit () {\n    charLimit.apply(null, arguments);\n  }\n  async dynamicAssign () {\n    dynamicAssign.apply(null, arguments);\n  }\n  async countLines () {\n    countLines.apply(null, arguments);\n  }\n}\n"],"sourceRoot":""}