{"version":3,"sources":["webpack://boilerplate/webpack/universalModuleDefinition","webpack://boilerplate/./node_modules/less/dist/less.js","webpack://boilerplate/./node_modules/prefixfree/prefixfree.js","webpack://boilerplate/webpack/bootstrap","webpack://boilerplate/webpack/runtime/define property getters","webpack://boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://boilerplate/./modules/fontfaceobserver.js","webpack://boilerplate/./modules/pageSetup.js","webpack://boilerplate/./modules/replace.js","webpack://boilerplate/./modules/placeholder.js","webpack://boilerplate/./modules/limiters.js","webpack://boilerplate/./modules/textFit.js","webpack://boilerplate/./modules/mto.js","webpack://boilerplate/./modules/boilerplate.js"],"names":["root","factory","exports","module","define","amd","self","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","logger","error","msg","this","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i","splice","type","logFunction","Environment","externalEnvironment","fileManagers","requiredFunctions","functions","concat","propName","environmentFunc","bind","prototype","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","Object","defineProperty","get","fileInfo","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","match","map","c","parseInt","alpha","split","clamp","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","toHSL","h","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","getType","payload","call","copy","target","constructor","getPrototypeOf","il","arguments","k","j","jl","__spreadArrays","getOwnPropertyNames","getOwnPropertySymbols","reduce","carry","props","includes","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","enumerable","writable","configurable","assignProp","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","utils","freeze","__proto__","merge","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","name","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","dumpLineNumbers","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","test","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","isPathLocalRelative","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","functionRegistry","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","strictImports","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","hash","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","__spreadArrays$1","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","urlArgs","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","javascriptEnabled","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","p","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","exec","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","emitFrom","emitChunk","force","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","atomicCondition","body","me","tryConditionFollowedByParenthesis","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","number","rgba","size","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","getItemsFromNode","list","_SELF","expr","_i","values","range","step","from","to","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","logger$1","parseNodeVersion_1","major","minor","patch","pre","build","lessRoot","sourceMapOutput","sourceMapBuilder","parseTree","importManager","SourceMapBuilder","ParseTree","toCSSOptions","sourceMap","file","getExternalSourceMap","files","rootFilename","SourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","ImportManager","rootFileInfo","mime","queue","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","render","self_1","Promise","resolve","reject","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","className","innerHTML","style","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","options$1","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","addEventListener","StyleFix","link","hasAttribute","getAttribute","base_scheme","base_domain","base_query","fix","$0","escaped_base","textContent","disabled","XDomainRequest","onerror","onprogress","onload","styleElement","styleAttribute","$","register","fixer","fixers","raw","camelCase","$1","deCamelCase","setTimeout","con","querySelectorAll","getComputedStyle","PrefixFree","prefixCSS","prefix","repeating","deg","regex","prefixSelector","valueProperties","prefixProperty","prefixed","prefixes","documentElement","dummy","iterate","parts","shorthand","supported","highest","uses","Prefix","unprefixed","keywords","atrules","cssRules","what","before","after","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","attachEvent","u","z","offsetWidth","width","scrollLeft","scrollWidth","A","q","TypeError","race","all","C","D","E","J","fonts","K","font","L","stretch","family","load","H","getTime","navigator","vendor","userAgent","G","M","N","clearTimeout","removeEventListener","detachEvent","I","hidden","ensureAllImagesLoaded","doc","timeout","loadAllImages","searchDOM","srcChecker","collection","getPropertyValue","tagName","src","contentDocument","contentWindow","img","Set","imgList","imgPromise","Image","naturalWidth","height","naturalHeight","loadImage","results","dynamicReplace","targets","inputValue","lookup","innerText","lookupSpan","temp","replaceAll","dynamicReplaceMulti","html","replaceFrom","replaceTo","search","dynamicReplaceSingle","setupPlaceholder","placeholderVisibility","placeholderImages","page","placeholderImage","placeholderStructure","insertAdjacentHTML","countLines","testBox","targetFix","classList","insertAdjacentElement","oneLineHeight","getHeight","lineCount","calculatedHeight","getWidth","calculatedWidth","maxLineCheck","isExportMode","isLocalDev","preventExportOverflow","isProjectKit","querySelector","maxLineAlt","maxLine","maxHeightCheck","maxHeight","maxHeightDynamic","dynamicAssign","blockHeight","computedBlockStyle","cssMaxHeight","maxHeightUnit","fontSize","container","overflow","dynamicHeight","totalHeight","subtrahend","subtrahendMargins","marginTop","marginBottom","offsetHeight","charLimit","limit","tokenValue","newStr","defaultSettings","alignVert","alignHoriz","multiLine","stopOverflow","detectMultiLine","fontUnit","fontChangeSize","minFontSize","maxFontSize","reProcess","widthOnly","alignVertWithFlexbox","display","textFit","settings","toArray","elType","processItem","HTMLElement","nodeType","nodeName","innerSpan","originalHeight","originalHTML","originalWidth","low","mid","high","outerHTML","textFittedSpan","contains","startingSize","scrollHeight","maxLines","isInteger","customOverflowMessage","getSidebar","showMTOMessage","sidebar","formGroupClassList","correctInputName","setupMTO","mtoList","mtoParams","inputData","inputName","inputListClassList","handleMTOData","hideTeamMetadata","inputOption","span","highestZ","zIndex","blockRender","dispatchEvent","Event","domReady","winLoad","boilerplate","ensureImagesLoad","allowLegacyRendering","exportReduceFont","firefoxReduceFont","trimMarks","keepConsole","clear","table","checkList","styleCode","setOutfitState","fontsLoaded","setBrowserType","setSize","addCrop","onTextChange","imageCompressEl","editorString","checkURL","imgSrc","imgEl","imgURL","bkgImgEl","bkgUrl","backgroundImage","imageCompression","defaultsRemoved","fontsListed","FontFaceObserver","isOpera","opr","addons","opera","isFirefox","InstallTrigger","isSafari","safari","pushNotification","isIE","documentMode","isChrome","chrome","webstore","runtime","isMac","appVersion","StyleMedia","CSS","vw","innerWidth","vh","innerHeight","preliminaryCalc","exportModeFontSize","firefoxFontSize","finalCalc","pageHeightSetup","agent","cropSVG","pageHeight","bleed","left","right","top","bottom","completeRender","loadTime","now","performance","timing","navigationStart","builtBy","scopeCard","builtCard","some","hotReloadOnChange","BroadcastChannel","onmessage","ev","reloading","highestZindex"],"mappings":"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","file":"boilerplate.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"boilerplate\"] = factory();\n\telse\n\t\troot[\"boilerplate\"] = factory();\n})(self, function() {\nreturn ","/**\n * Less - Leaner CSS v4.1.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n            var self = this;\r\n            Object.defineProperty(this, 'currentFileInfo', {\r\n                get: function () { return self.fileInfo(); }\r\n            });\r\n            Object.defineProperty(this, 'index', {\r\n                get: function () { return self.getIndex(); }\r\n            });\r\n        }\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp(Math.round(c), 255);\r\n                    }).concat(clamp(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    var debugInfo = /** @class */ (function () {\r\n        function debugInfo(context, ctx, lineSeparator) {\r\n            var result = '';\r\n            if (context.dumpLineNumbers && !context.compress) {\r\n                switch (context.dumpLineNumbers) {\r\n                    case 'comments':\r\n                        result = debugInfo.asComment(ctx);\r\n                        break;\r\n                    case 'mediaquery':\r\n                        result = debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                    case 'all':\r\n                        result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        debugInfo.asComment = function (ctx) {\r\n            return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n        };\r\n        debugInfo.asMediaQuery = function (ctx) {\r\n            var filenameWithProtocol = ctx.debugInfo.fileName;\r\n            if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n                filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n            }\r\n            return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n                if (a == '\\\\') {\r\n                    a = '\\/';\r\n                }\r\n                return \"\\\\\" + a;\r\n            }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n        };\r\n        return debugInfo;\r\n    }());\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays$1() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArrays$1([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name', message: \"Recursive variable definition for \" + name, filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: \"variable \" + name + \" is undefined\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name', message: \"Recursive property reference for \" + name, filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: \"Property '\" + name + \"' is undefined\", filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name', message: \"variable \" + name + \" not found\", filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name', message: \"property \\\"\" + name.substr(1) + \"\\\" not found\", filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime', message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime', message: \"No matching definition was found for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: this.selector.toCSS().trim() + \" is undefined\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\r\n        Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\r\n        Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\r\n        Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\r\n        Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\r\n        Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\r\n        Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var error = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    error = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = error || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import?\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp$1(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number(h) % 360) / 360;\r\n                s = clamp$1(number(s));\r\n                l = clamp$1(number(l));\r\n                a = clamp$1(number(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number(h) % 360) / 360) * 360;\r\n            s = number(s);\r\n            v = number(v);\r\n            a = number(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp$1(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp$1(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp$1(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp$1(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f)) {\r\n            colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f$1 in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f$1)) {\r\n            mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number$1 = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument', message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number$1);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.1\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options;\r\n    var logger$1;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options.isFileProtocol ? options.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger$1.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options.isFileProtocol && !options.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options = opts;\r\n        logger$1 = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options$1 = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options$1[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options$1);\r\n    options$1.plugins = options$1.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options$1);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options$1.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options$1.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options$1.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n","/**\n * StyleFix 1.0.3 & PrefixFree 1.0.7\n * @author Lea Verou\n * MIT license\n */\n\n(function(){\n\nif(!window.addEventListener) {\n\treturn;\n}\n\nvar self = window.StyleFix = {\n\tlink: function(link) {\n\t\ttry {\n\t\t\t// Ignore stylesheets with data-noprefix attribute as well as alternate stylesheets\n\t\t\tif(link.rel !== 'stylesheet' || link.hasAttribute('data-noprefix')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar url = link.href || link.getAttribute('data-href'),\n\t\t    base = url.replace(/[^\\/]+$/, ''),\n\t\t    base_scheme = (/^[a-z]{3,10}:/.exec(base) || [''])[0],\n\t\t    base_domain = (/^[a-z]{3,10}:\\/\\/[^\\/]+/.exec(base) || [''])[0],\n\t\t    base_query = /^([^?]*)\\??/.exec(url)[1],\n\t\t    parent = link.parentNode,\n\t\t    xhr = new XMLHttpRequest(),\n\t\t    process;\n\t\t\n\t\txhr.onreadystatechange = function() {\n\t\t\tif(xhr.readyState === 4) {\n\t\t\t\tprocess();\n\t\t\t}\n\t\t};\n\n\t\tprocess = function() {\n\t\t\t\tvar css = xhr.responseText;\n\t\t\t\t\n\t\t\t\tif(css && link.parentNode && (!xhr.status || xhr.status < 400 || xhr.status > 600)) {\n\t\t\t\t\tcss = self.fix(css, true, link);\n\t\t\t\t\t\n\t\t\t\t\t// Convert relative URLs to absolute, if needed\n\t\t\t\t\tif(css && base) {\n\t\t\t\t\t\tcss = css.replace(/url\\(\\s*?((?:\"|')?)(.+?)\\1\\s*?\\)/gi, function($0, quote, url) {\n\t\t\t\t\t\t\tif(/^([a-z]{3,10}:|#)/i.test(url)) { // Absolute & or hash-relative\n\t\t\t\t\t\t\t\treturn $0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(/^\\/\\//.test(url)) { // Scheme-relative\n\t\t\t\t\t\t\t\t// May contain sequences like /../ and /./ but those DO work\n\t\t\t\t\t\t\t\treturn 'url(\"' + base_scheme + url + '\")';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(/^\\//.test(url)) { // Domain-relative\n\t\t\t\t\t\t\t\treturn 'url(\"' + base_domain + url + '\")';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(/^\\?/.test(url)) { // Query-relative\n\t\t\t\t\t\t\t\treturn 'url(\"' + base_query + url + '\")';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Path-relative\n\t\t\t\t\t\t\t\treturn 'url(\"' + base + url + '\")';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// behavior URLs shoudn’t be converted (Issue #19)\n\t\t\t\t\t\t// base should be escaped before added to RegExp (Issue #81)\n\t\t\t\t\t\tvar escaped_base = base.replace(/([\\\\\\^\\$*+[\\]?{}.=!:(|)])/g,\"\\\\$1\");\n\t\t\t\t\t\tcss = css.replace(RegExp('\\\\b(behavior:\\\\s*?url\\\\(\\'?\"?)' + escaped_base, 'gi'), '$1');\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar style = document.createElement('style');\n\t\t\t\t\tstyle.textContent = css;\n\t\t\t\t\tstyle.media = link.media;\n\t\t\t\t\tstyle.disabled = link.disabled;\n\t\t\t\t\tstyle.setAttribute('data-href', link.getAttribute('href'));\n\n\t\t\t\t\tif(link.id) style.id = link.id;\n\n\t\t\t\t\tparent.insertBefore(style, link);\n\t\t\t\t\tparent.removeChild(link);\n\t\t\t\t\t\n\t\t\t\t\tstyle.media = link.media; // Duplicate is intentional. See issue #31\n\t\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\txhr.open('GET', url);\n\t\t\txhr.send(null);\n\t\t} catch (e) {\n\t\t\t// Fallback to XDomainRequest if available\n\t\t\tif (typeof XDomainRequest != \"undefined\") {\n\t\t\t\txhr = new XDomainRequest();\n\t\t\t\txhr.onerror = xhr.onprogress = function() {};\n\t\t\t\txhr.onload = process;\n\t\t\t\txhr.open(\"GET\", url);\n\t\t\t\txhr.send(null);\n\t\t\t}\n\t\t}\n\t\t\n\t\tlink.setAttribute('data-inprogress', '');\n\t},\n\n\tstyleElement: function(style) {\n\t\tif (style.hasAttribute('data-noprefix')) {\n\t\t\treturn;\n\t\t}\n\t\tvar disabled = style.disabled;\n\t\t\n\t\tstyle.textContent = self.fix(style.textContent, true, style);\n\t\t\n\t\tstyle.disabled = disabled;\n\t},\n\n\tstyleAttribute: function(element) {\n\t\tvar css = element.getAttribute('style');\n\t\t\n\t\tcss = self.fix(css, false, element);\n\t\t\n\t\telement.setAttribute('style', css);\n\t},\n\t\n\tprocess: function() {\n\t\t// Linked stylesheets\n\t\t$('link[rel=\"stylesheet\"]:not([data-inprogress])').forEach(StyleFix.link);\n\t\t\n\t\t// Inline stylesheets\n\t\t$('style').forEach(StyleFix.styleElement);\n\t\t\n\t\t// Inline styles\n\t\t$('[style]').forEach(StyleFix.styleAttribute);\n\t},\n\t\n\tregister: function(fixer, index) {\n\t\t(self.fixers = self.fixers || [])\n\t\t\t.splice(index === undefined? self.fixers.length : index, 0, fixer);\n\t},\n\t\n\tfix: function(css, raw, element) {\n\t\tif(self.fixers) {\n\t\t  for(var i=0; i<self.fixers.length; i++) {\n\t\t\tcss = self.fixers[i](css, raw, element) || css;\n\t\t  }\n\t\t}\n\t\t\n\t\treturn css;\n\t},\n\t\n\tcamelCase: function(str) {\n\t\treturn str.replace(/-([a-z])/g, function($0, $1) { return $1.toUpperCase(); }).replace('-','');\n\t},\n\t\n\tdeCamelCase: function(str) {\n\t\treturn str.replace(/[A-Z]/g, function($0) { return '-' + $0.toLowerCase() });\n\t}\n};\n\n/**************************************\n * Process styles\n **************************************/\n(function(){\n\tsetTimeout(function(){\n\t\t$('link[rel=\"stylesheet\"]').forEach(StyleFix.link);\n\t}, 10);\n\t\n\tdocument.addEventListener('DOMContentLoaded', StyleFix.process, false);\n})();\n\nfunction $(expr, con) {\n\treturn [].slice.call((con || document).querySelectorAll(expr));\n}\n\n})();\n\n/**\n * PrefixFree\n */\n(function(root){\n\nif(!window.StyleFix || !window.getComputedStyle) {\n\treturn;\n}\n\n// Private helper\nfunction fix(what, before, after, replacement, css) {\n\twhat = self[what];\n\t\n\tif(what.length) {\n\t\tvar regex = RegExp(before + '(' + what.join('|') + ')' + after, 'gi');\n\n\t\tcss = css.replace(regex, replacement);\n\t}\n\t\n\treturn css;\n}\n\nvar self = window.PrefixFree = {\n\tprefixCSS: function(css, raw, element) {\n\t\tvar prefix = self.prefix;\n\t\t\n\t\t// Gradient angles hotfix\n\t\tif(self.functions.indexOf('linear-gradient') > -1) {\n\t\t\t// Gradients are supported with a prefix, convert angles to legacy\n\t\t\tcss = css.replace(/(\\s|:|,)(repeating-)?linear-gradient\\(\\s*(-?\\d*\\.?\\d*)deg/ig, function ($0, delim, repeating, deg) {\n\t\t\t\treturn delim + (repeating || '') + 'linear-gradient(' + (90-deg) + 'deg';\n\t\t\t});\n\t\t}\n\t\t\n\t\tcss = fix('functions', '(\\\\s|:|,)', '\\\\s*\\\\(', '$1' + prefix + '$2(', css);\n\t\tcss = fix('keywords', '(\\\\s|:)', '(\\\\s|;|\\\\}|$)', '$1' + prefix + '$2$3', css);\n\t\tcss = fix('properties', '(^|\\\\{|\\\\s|;)', '\\\\s*:', '$1' + prefix + '$2:', css);\n\t\t\n\t\t// Prefix properties *inside* values (issue #8)\n\t\tif (self.properties.length) {\n\t\t\tvar regex = RegExp('\\\\b(' + self.properties.join('|') + ')(?!:)', 'gi');\n\t\t\t\n\t\t\tcss = fix('valueProperties', '\\\\b', ':(.+?);', function($0) {\n\t\t\t\treturn $0.replace(regex, prefix + \"$1\")\n\t\t\t}, css);\n\t\t}\n\t\t\n\t\tif(raw) {\n\t\t\tcss = fix('selectors', '', '\\\\b', self.prefixSelector, css);\n\t\t\tcss = fix('atrules', '@', '\\\\b', '@' + prefix + '$1', css);\n\t\t}\n\t\t\n\t\t// Fix double prefixing\n\t\tcss = css.replace(RegExp('-' + prefix, 'g'), '-');\n\t\t\n\t\t// Prefix wildcard\n\t\tcss = css.replace(/-\\*-(?=[a-z]+)/gi, self.prefix);\n\t\t\n\t\treturn css;\n\t},\n\t\n\tproperty: function(property) {\n\t\treturn (self.properties.indexOf(property) >=0 ? self.prefix : '') + property;\n\t},\n\t\n\tvalue: function(value, property) {\n\t\tvalue = fix('functions', '(^|\\\\s|,)', '\\\\s*\\\\(', '$1' + self.prefix + '$2(', value);\n\t\tvalue = fix('keywords', '(^|\\\\s)', '(\\\\s|$)', '$1' + self.prefix + '$2$3', value);\n\n\t\tif(self.valueProperties.indexOf(property) >= 0) {\n\t\t\tvalue = fix('properties', '(^|\\\\s|,)', '($|\\\\s|,)', '$1'+self.prefix+'$2$3', value);\n\t\t}\n\n\t\treturn value;\n\t},\n\t\n\t// Warning: Prefixes no matter what, even if the selector is supported prefix-less\n\tprefixSelector: function(selector) {\n\t\treturn selector.replace(/^:{1,2}/, function($0) { return $0 + self.prefix })\n\t},\n\t\n\t// Warning: Prefixes no matter what, even if the property is supported prefix-less\n\tprefixProperty: function(property, camelCase) {\n\t\tvar prefixed = self.prefix + property;\n\t\t\n\t\treturn camelCase? StyleFix.camelCase(prefixed) : prefixed;\n\t}\n};\n\n/**************************************\n * Properties\n **************************************/\n(function() {\n\tvar prefixes = {},\n\t\tproperties = [],\n\t\tshorthands = {},\n\t\tstyle = getComputedStyle(document.documentElement, null),\n\t\tdummy = document.createElement('div').style;\n\t\n\t// Why are we doing this instead of iterating over properties in a .style object? Cause Webkit won't iterate over those.\n\tvar iterate = function(property) {\n\t\tif(property.charAt(0) === '-') {\n\t\t\tproperties.push(property);\n\t\t\t\n\t\t\tvar parts = property.split('-'),\n\t\t\t\tprefix = parts[1];\n\t\t\t\t\n\t\t\t// Count prefix uses\n\t\t\tprefixes[prefix] = ++prefixes[prefix] || 1;\n\t\t\t\n\t\t\t// This helps determining shorthands\n\t\t\twhile(parts.length > 3) {\n\t\t\t\tparts.pop();\n\t\t\t\t\n\t\t\t\tvar shorthand = parts.join('-');\n\n\t\t\t\tif(supported(shorthand) && properties.indexOf(shorthand) === -1) {\n\t\t\t\t\tproperties.push(shorthand);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tsupported = function(property) {\n\t\treturn StyleFix.camelCase(property) in dummy;\n\t}\n\t\n\t// Some browsers have numerical indices for the properties, some don't\n\tif(style && style.length > 0) {\n\t\tfor(var i=0; i<style.length; i++) {\n\t\t\titerate(style[i])\n\t\t}\n\t}\n\telse {\n\t\tfor(var property in style) {\n\t\t\titerate(StyleFix.deCamelCase(property));\n\t\t}\n\t}\n\n\t// Find most frequently used prefix\n\tvar highest = {uses:0};\n\tfor(var prefix in prefixes) {\n\t\tvar uses = prefixes[prefix];\n\n\t\tif(highest.uses < uses) {\n\t\t\thighest = {prefix: prefix, uses: uses};\n\t\t}\n\t}\n\t\n\tself.prefix = '-' + highest.prefix + '-';\n\tself.Prefix = StyleFix.camelCase(self.prefix);\n\t\n\tself.properties = [];\n\n\t// Get properties ONLY supported with a prefix\n\tfor(var i=0; i<properties.length; i++) {\n\t\tvar property = properties[i];\n\t\t\n\t\tif(property.indexOf(self.prefix) === 0) { // we might have multiple prefixes, like Opera\n\t\t\tvar unprefixed = property.slice(self.prefix.length);\n\t\t\t\n\t\t\tif(!supported(unprefixed)) {\n\t\t\t\tself.properties.push(unprefixed);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// IE fix\n\tif(self.Prefix == 'Ms' \n\t  && !('transform' in dummy) \n\t  && !('MsTransform' in dummy) \n\t  && ('msTransform' in dummy)) {\n\t\tself.properties.push('transform', 'transform-origin');\t\n\t}\n\t\n\tself.properties.sort();\n})();\n\n/**************************************\n * Values\n **************************************/\n(function() {\n// Values that might need prefixing\nvar functions = {\n\t'linear-gradient': {\n\t\tproperty: 'backgroundImage',\n\t\tparams: 'red, teal'\n\t},\n\t'calc': {\n\t\tproperty: 'width',\n\t\tparams: '1px + 5%'\n\t},\n\t'element': {\n\t\tproperty: 'backgroundImage',\n\t\tparams: '#foo'\n\t},\n\t'cross-fade': {\n\t\tproperty: 'backgroundImage',\n\t\tparams: 'url(a.png), url(b.png), 50%'\n\t}\n};\n\n\nfunctions['repeating-linear-gradient'] =\nfunctions['repeating-radial-gradient'] =\nfunctions['radial-gradient'] =\nfunctions['linear-gradient'];\n\n// Note: The properties assigned are just to *test* support. \n// The keywords will be prefixed everywhere.\nvar keywords = {\n\t'initial': 'color',\n\t'zoom-in': 'cursor',\n\t'zoom-out': 'cursor',\n\t'box': 'display',\n\t'flexbox': 'display',\n\t'inline-flexbox': 'display',\n\t'flex': 'display',\n\t'inline-flex': 'display',\n\t'grid': 'display',\n\t'inline-grid': 'display',\n\t'max-content': 'width',\n\t'min-content': 'width',\n\t'fit-content': 'width',\n\t'fill-available': 'width'\n};\n\nself.functions = [];\nself.keywords = [];\n\nvar style = document.createElement('div').style;\n\nfunction supported(value, property) {\n\tstyle[property] = '';\n\tstyle[property] = value;\n\n\treturn !!style[property];\n}\n\nfor (var func in functions) {\n\tvar test = functions[func],\n\t\tproperty = test.property,\n\t\tvalue = func + '(' + test.params + ')';\n\t\n\tif (!supported(value, property)\n\t  && supported(self.prefix + value, property)) {\n\t\t// It's supported, but with a prefix\n\t\tself.functions.push(func);\n\t}\n}\n\nfor (var keyword in keywords) {\n\tvar property = keywords[keyword];\n\n\tif (!supported(keyword, property)\n\t  && supported(self.prefix + keyword, property)) {\n\t\t// It's supported, but with a prefix\n\t\tself.keywords.push(keyword);\n\t}\n}\n\n})();\n\n/**************************************\n * Selectors and @-rules\n **************************************/\n(function() {\n\nvar \nselectors = {\n\t':read-only': null,\n\t':read-write': null,\n\t':any-link': null,\n\t'::selection': null\n},\n\natrules = {\n\t'keyframes': 'name',\n\t'viewport': null,\n\t'document': 'regexp(\".\")'\n};\n\nself.selectors = [];\nself.atrules = [];\n\nvar style = root.appendChild(document.createElement('style'));\n\nfunction supported(selector) {\n\tstyle.textContent = selector + '{}';  // Safari 4 has issues with style.innerHTML\n\t\n\treturn !!style.sheet.cssRules.length;\n}\n\nfor(var selector in selectors) {\n\tvar test = selector + (selectors[selector]? '(' + selectors[selector] + ')' : '');\n\t\t\n\tif(!supported(test) && supported(self.prefixSelector(test))) {\n\t\tself.selectors.push(selector);\n\t}\n}\n\nfor(var atrule in atrules) {\n\tvar test = atrule + ' ' + (atrules[atrule] || '');\n\t\n\tif(!supported('@' + test) && supported('@' + self.prefix + test)) {\n\t\tself.atrules.push(atrule);\n\t}\n}\n\nroot.removeChild(style);\n\n})();\n\n// Properties that accept properties as their value\nself.valueProperties = [\n\t'transition',\n\t'transition-property'\n]\n\n// Add class for current prefix\nroot.className += ' ' + self.prefix;\n\nStyleFix.register(self.prefixCSS);\n\n\n})(document.documentElement);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* Font Face Observer v2.1.0 - © Bram Stein. License: BSD-3-Clause */ (function () {\n  \"use strict\";\n  var f,\n    g = [];\n  function l(a) {\n    g.push(a);\n    1 == g.length && f();\n  }\n  function m() {\n    for (; g.length; ) g[0](), g.shift();\n  }\n  f = function () {\n    setTimeout(m);\n  };\n  function n(a) {\n    this.a = p;\n    this.b = void 0;\n    this.f = [];\n    var b = this;\n    try {\n      a(\n        function (a) {\n          q(b, a);\n        },\n        function (a) {\n          r(b, a);\n        }\n      );\n    } catch (c) {\n      r(b, c);\n    }\n  }\n  var p = 2;\n  function t(a) {\n    return new n(function (b, c) {\n      c(a);\n    });\n  }\n  function u(a) {\n    return new n(function (b) {\n      b(a);\n    });\n  }\n  function q(a, b) {\n    if (a.a == p) {\n      if (b == a) throw new TypeError();\n      var c = !1;\n      try {\n        var d = b && b.then;\n        if (null != b && \"object\" == typeof b && \"function\" == typeof d) {\n          d.call(\n            b,\n            function (b) {\n              c || q(a, b);\n              c = !0;\n            },\n            function (b) {\n              c || r(a, b);\n              c = !0;\n            }\n          );\n          return;\n        }\n      } catch (e) {\n        c || r(a, e);\n        return;\n      }\n      a.a = 0;\n      a.b = b;\n      v(a);\n    }\n  }\n  function r(a, b) {\n    if (a.a == p) {\n      if (b == a) throw new TypeError();\n      a.a = 1;\n      a.b = b;\n      v(a);\n    }\n  }\n  function v(a) {\n    l(function () {\n      if (a.a != p)\n        for (; a.f.length; ) {\n          var b = a.f.shift(),\n            c = b[0],\n            d = b[1],\n            e = b[2],\n            b = b[3];\n          try {\n            0 == a.a\n              ? \"function\" == typeof c\n                ? e(c.call(void 0, a.b))\n                : e(a.b)\n              : 1 == a.a &&\n                (\"function\" == typeof d ? e(d.call(void 0, a.b)) : b(a.b));\n          } catch (h) {\n            b(h);\n          }\n        }\n    });\n  }\n  n.prototype.g = function (a) {\n    return this.c(void 0, a);\n  };\n  n.prototype.c = function (a, b) {\n    var c = this;\n    return new n(function (d, e) {\n      c.f.push([a, b, d, e]);\n      v(c);\n    });\n  };\n  function w(a) {\n    return new n(function (b, c) {\n      function d(c) {\n        return function (d) {\n          h[c] = d;\n          e += 1;\n          e == a.length && b(h);\n        };\n      }\n      var e = 0,\n        h = [];\n      0 == a.length && b(h);\n      for (var k = 0; k < a.length; k += 1) u(a[k]).c(d(k), c);\n    });\n  }\n  function x(a) {\n    return new n(function (b, c) {\n      for (var d = 0; d < a.length; d += 1) u(a[d]).c(b, c);\n    });\n  }\n  window.Promise ||\n    ((window.Promise = n),\n    (window.Promise.resolve = u),\n    (window.Promise.reject = t),\n    (window.Promise.race = x),\n    (window.Promise.all = w),\n    (window.Promise.prototype.then = n.prototype.c),\n    (window.Promise.prototype[\"catch\"] = n.prototype.g));\n})();\n\n  function l(a, b) {\n    document.addEventListener\n      ? a.addEventListener(\"scroll\", b, !1)\n      : a.attachEvent(\"scroll\", b);\n  }\n  function m(a) {\n    document.body\n      ? a()\n      : document.addEventListener\n      ? document.addEventListener(\"DOMContentLoaded\", function c() {\n          document.removeEventListener(\"DOMContentLoaded\", c);\n          a();\n        })\n      : document.attachEvent(\"onreadystatechange\", function k() {\n          if (\n            \"interactive\" == document.readyState ||\n            \"complete\" == document.readyState\n          )\n            document.detachEvent(\"onreadystatechange\", k), a();\n        });\n  }\n  function t(a) {\n    this.a = document.createElement(\"div\");\n    this.a.setAttribute(\"aria-hidden\", \"true\");\n    this.a.appendChild(document.createTextNode(a));\n    this.b = document.createElement(\"span\");\n    this.c = document.createElement(\"span\");\n    this.h = document.createElement(\"span\");\n    this.f = document.createElement(\"span\");\n    this.g = -1;\n    this.b.style.cssText =\n      \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.c.style.cssText =\n      \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.f.style.cssText =\n      \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.h.style.cssText =\n      \"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";\n    this.b.appendChild(this.h);\n    this.c.appendChild(this.f);\n    this.a.appendChild(this.b);\n    this.a.appendChild(this.c);\n  }\n  function u(a, b) {\n    a.a.style.cssText =\n      \"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\" +\n      b +\n      \";\";\n  }\n  function z(a) {\n    var b = a.a.offsetWidth,\n      c = b + 100;\n    a.f.style.width = c + \"px\";\n    a.c.scrollLeft = c;\n    a.b.scrollLeft = a.b.scrollWidth + 100;\n    return a.g !== b ? ((a.g = b), !0) : !1;\n  }\n  function A(a, b) {\n    function c() {\n      var a = k;\n      z(a) && a.a.parentNode && b(a.g);\n    }\n    var k = a;\n    l(a.b, c);\n    l(a.c, c);\n    z(a);\n  }\n  function B(a, b) {\n    var c = b || {};\n    this.family = a;\n    this.style = c.style || \"normal\";\n    this.weight = c.weight || \"normal\";\n    this.stretch = c.stretch || \"normal\";\n    this.load = function (a, b) {\n        var c = this,\n          k = a || \"BESbswy\",\n          r = 0,\n          n = b || 3e3,\n          H = new Date().getTime();\n        return new Promise(function (a, b) {\n          if (J() && !G()) {\n            var M = new Promise(function (a, b) {\n                function e() {\n                  new Date().getTime() - H >= n\n                    ? b(Error(\"\" + n + \"ms timeout exceeded loading fonts\"))\n                    : document.fonts\n                        .load(L(c, '\"' + c.family + '\"'), k)\n                        .then(function (c) {\n                          1 <= c.length ? a() : setTimeout(e, 25);\n                        }, b);\n                }\n                e();\n              }),\n              N = new Promise(function (a, c) {\n                r = setTimeout(function () {\n                  c(Error(\"\" + n + \"ms timeout exceeded loading fonts\"));\n                }, n);\n              });\n            Promise.race([N, M]).then(function () {\n              clearTimeout(r);\n              a(c);\n            }, b);\n          } else\n            m(function () {\n              function v() {\n                var b;\n                if (\n                  (b =\n                    (-1 != f && -1 != g) ||\n                    (-1 != f && -1 != h) ||\n                    (-1 != g && -1 != h))\n                )\n                  (b = f != g && f != h && g != h) ||\n                    (null === C &&\n                      ((b = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(\n                        window.navigator.userAgent\n                      )),\n                      (C =\n                        !!b &&\n                        (536 > parseInt(b[1], 10) ||\n                          (536 === parseInt(b[1], 10) &&\n                            11 >= parseInt(b[2], 10))))),\n                    (b =\n                      C &&\n                      ((f == w && g == w && h == w) ||\n                        (f == x && g == x && h == x) ||\n                        (f == y && g == y && h == y)))),\n                    (b = !b);\n                b &&\n                  (d.parentNode && d.parentNode.removeChild(d),\n                  clearTimeout(r),\n                  a(c));\n              }\n              function I() {\n                if (new Date().getTime() - H >= n)\n                  d.parentNode && d.parentNode.removeChild(d),\n                    b(Error(\"\" + n + \"ms timeout exceeded loading fonts\"));\n                else {\n                  var a = document.hidden;\n                  if (!0 === a || void 0 === a)\n                    (f = e.a.offsetWidth),\n                      (g = p.a.offsetWidth),\n                      (h = q.a.offsetWidth),\n                      v();\n                  r = setTimeout(I, 50);\n                }\n              }\n              var e = new t(k),\n                p = new t(k),\n                q = new t(k),\n                f = -1,\n                g = -1,\n                h = -1,\n                w = -1,\n                x = -1,\n                y = -1,\n                d = document.createElement(\"div\");\n              d.dir = \"ltr\";\n              u(e, L(c, \"sans-serif\"));\n              u(p, L(c, \"serif\"));\n              u(q, L(c, \"monospace\"));\n              d.appendChild(e.a);\n              d.appendChild(p.a);\n              d.appendChild(q.a);\n              document.body.appendChild(d);\n              w = e.a.offsetWidth;\n              x = p.a.offsetWidth;\n              y = q.a.offsetWidth;\n              I();\n              A(e, function (a) {\n                f = a;\n                v();\n              });\n              u(e, L(c, '\"' + c.family + '\",sans-serif'));\n              A(p, function (a) {\n                g = a;\n                v();\n              });\n              u(p, L(c, '\"' + c.family + '\",serif'));\n              A(q, function (a) {\n                h = a;\n                v();\n              });\n              u(q, L(c, '\"' + c.family + '\",monospace'));\n            });\n        });\n      };\n  }\n  var C = null,\n    D = null,\n    E = null,\n    F = null;\n  function G() {\n    if (null === D)\n      if (J() && /Apple/.test(window.navigator.vendor)) {\n        var a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(\n          window.navigator.userAgent\n        );\n        D = !!a && 603 > parseInt(a[1], 10);\n      } else D = !1;\n    return D;\n  }\n  function J() {\n    null === F && (F = !!document.fonts);\n    return F;\n  }\n  function K() {\n    if (null === E) {\n      var a = document.createElement(\"div\");\n      try {\n        a.style.font = \"condensed 100px sans-serif\";\n      } catch (b) {}\n      E = \"\" !== a.style.font;\n    }\n    return E;\n  }\n  function L(a, b) {\n    return [a.style, a.weight, K() ? a.stretch : \"\", \"100px\", b].join(\" \");\n  }\n \nexport default B;\n","const imageCompression = () => {\n  var imageCompressEl = document.querySelectorAll(\"[data-custom-compression]\");\n  var editorString = \"?qual=editor\";\n\n  function checkURL(editorString, url) {\n    if (url.includes(editorString) || url.includes(\".svg\")) return false;\n    return true;\n  }\n\n  imageCompressEl.forEach((el) => {\n    //Non Repo Images with data-custom-compression on img element itself\n    var imgSrc = el.getAttribute(\"src\");\n    console.log(imgSrc);\n    if (imgSrc) {\n      //src attribute exists assume that this is an <img> element\n      if (!checkURL(editorString, imgSrc)) return;\n      el.setAttribute(\"src\", imgSrc + editorString);\n    } else {\n      var imgEl = el.querySelector(\"img\");\n      if (!imgEl) return;\n      var imgURL = imgEl.getAttribute(\"src\");\n      if (!checkURL(editorString, imgURL)) return;\n      imgEl.setAttribute(\"src\", imgURL + editorString);\n\n      var bkgImgEl = el.querySelector(\".outfit-resizable-background\");\n      if (!bkgImgEl) return;\n      var bkgUrl = bkgImgEl.style.backgroundImage\n        .slice(4, -1)\n        .replace(/\"/g, \"\");\n      if (!checkURL(editorString, bkgUrl)) return;\n      bkgImgEl.style.backgroundImage = `url(\"${bkgUrl}${editorString}\")`;\n    }\n  });\n}\n\n// https://blog.crimx.com/2017/03/09/get-all-images-in-dom-including-background-en/\n// time out is set to 60 seconds as that is as long as the platform timeout\nconst ensureAllImagesLoaded = (doc = document, timeout = 6e4) => {\n  return new Promise((resolve, reject) => {\n    loadAllImages(Array.from(searchDOM(doc)), timeout)\n      .then(resolve, reject)\n  })\n}\n\nconst searchDOM = (doc) => {\n  const srcChecker = /url\\(\\s*?['\"]?\\s*?(\\S+?)\\s*?[\"']?\\s*?\\)/i\n  return Array.from(doc.querySelectorAll('*'))\n    .reduce((collection, node) => {\n      // bg src\n      let prop = window.getComputedStyle(node, null)\n        .getPropertyValue('background-image')\n      // match `url(...)`\n      let match = srcChecker.exec(prop)\n      if (match) {\n        collection.add(match[1])\n      }\n      if (/^img$/i.test(node.tagName)) {\n        // src from img tag\n        collection.add(node.src)\n      } else if (/^frame$/i.test(node.tagName)) {\n        // iframe\n        try {\n          searchDOM(node.contentDocument || node.contentWindow.document)\n            .forEach(img => {\n              if (img) { collection.add(img) }\n            })\n        } catch (e) {}\n      }\n      return collection\n    }, new Set())\n}\n\nconst loadImage = (src, timeout = 5000) => {\n  var imgPromise = new Promise((resolve, reject) => {\n    let img = new Image()\n    img.onload = () => {\n      resolve({\n        src: src,\n        width: img.naturalWidth,\n        height: img.naturalHeight\n      })\n    }\n    img.onerror = reject\n    img.src = src\n  })\n  var timer = new Promise((resolve, reject) => {\n    setTimeout(reject, timeout)\n  })\n  return Promise.race([imgPromise, timer])\n}\n\nconst loadAllImages = (imgList, timeout = 5000) => {\n  return new Promise((resolve, reject) => {\n    Promise.all(\n      imgList\n        .map(src => loadImage(src, timeout))\n        .map(p => p.catch(e => false))\n    ).then(results => resolve(results.filter(r => r)))\n  })\n}\n\nexport { imageCompression, ensureAllImagesLoaded };\n","// render has an issue with replaceAll causing errors to be thrown which stops the render. This is a pollyfil for all renders\r\nString.prototype.replaceAll = function (str, newStr) {\r\n  // If a regex pattern\r\n  if (Object.prototype.toString.call(str).toLowerCase() === \"[object regexp]\") {\r\n    return this.replace(str, newStr);\r\n  }\r\n  // If a string\r\n  return this.split(str).join(newStr);\r\n};\r\n\r\nfunction dynamicReplace(selector = null, data = null) {\r\n  if (selector != null && data != null) \r\n  { \r\n    dynamicReplaceMulti(selector, data);\r\n  } else {\r\n    dynamicReplaceSingle();\r\n  }\r\n}\r\n\r\nfunction dynamicReplaceMulti(target, data) {\r\n  const targets = document.querySelectorAll(target);\r\n  if (targets.length === 0) return;\r\n\r\n  targets.forEach(function (target) {\r\n    data.forEach(function (item) {\r\n      const inputValue = item[0];\r\n      const lookup = item[1];\r\n\r\n      if (\r\n        target.innerText.includes(lookup) != -1 &&\r\n        (inputValue != \"\" || inputValue.length != 0)\r\n      ) {\r\n        target.innerHTML = target.innerHTML.replaceAll(lookup, inputValue); //If found replace\r\n      } else {\r\n        let lookupSpan = `<span class='lookup-value'>${lookup}</span>`;\r\n        // console.log(target.innerHTML);\r\n        let temp = target.innerHTML.split(lookupSpan);\r\n        temp = temp.map((x) => x.replaceAll(lookup, lookupSpan));\r\n        target.innerHTML = temp.join(lookupSpan);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction dynamicReplaceSingle() {\r\n  const elements = document.querySelectorAll(\"[data-replace-from]\");\r\n  if (elements.length === 0) return;\r\n\r\n  elements.forEach((el) => {\r\n    const text = el.innerText;\r\n    const html = el.innerHTML;\r\n    const lookup = el.dataset.replaceFrom;\r\n    const replace = el.dataset.replaceTo;\r\n\r\n    if (text.search(lookup) != -1 && (replace != \"\" || replace.length != 0)) {\r\n      el.innerHTML = html.replaceAll(lookup, replace);\r\n    }\r\n  });\r\n}\r\n\r\nexport { dynamicReplace, dynamicReplaceSingle, dynamicReplaceMulti }","export default function setupPlaceholder(placeholderVisibility, placeholderImages) {\n    // If array length < 1 or the first item is \"\" or null or undefined\n    if (\n      placeholderImages.length < 1 ||\n      placeholderImages[0] == \"\" ||\n      placeholderImages[0] == null ||\n      placeholderImages[0] == undefined ||\n      placeholderVisibility == \"hide\"\n    )\n      return;\n  \n    var pages = document.querySelectorAll(\".page .container\");\n    pages.forEach((page, index) => {\n      let placeholderImage = placeholderImages[index];\n      if (\n        placeholderImage == \"\" ||\n        placeholderImage == null ||\n        placeholderImage == undefined\n      )\n        placeholderImage = placeholderImages[0];\n  \n      let placeholderStructure = `<div class=\"placeholderImage\" style=\"background-image: url('${placeholderImage}')\"></div>`;\n      page.insertAdjacentHTML(\"afterbegin\", placeholderStructure);\n    });\n  }","// count the number of lines inside of the current direct element\r\nfunction countLines(target) {\r\n  let testBox = document.createElement(\"div\");\r\n  let targetFix = target.firstChild ? target.firstChild.classList === \"textFitted\" ? target.firstChild : target : target; \r\n  testBox.classList = \"lineCounter\";\r\n  // testBox.style.fontFamily = \"-webkit-pictograph\";\r\n  // testBox.style.display = \"block\";\r\n  // testBox.style.fontSize = targetFix.style.fontSize;\r\n  testBox.innerText = \"​\";\r\n  targetFix.insertAdjacentElement('afterbegin', testBox) \r\n  let oneLineHeight = getHeight(testBox);\r\n  testBox.remove();\r\n  let lines = getHeight(targetFix) / oneLineHeight;\r\n  target.dataset.lineCount = lines; // adds property for CSS targeting\r\n  return lines;\r\n}\r\n\r\n// Calculate height without padding.\r\nfunction getHeight(el) {\r\n  var style = window.getComputedStyle(el, null);\r\n  var height = parseFloat(style.getPropertyValue(\"height\"));\r\n  var box_sizing = style.getPropertyValue(\"box-sizing\");\r\n  if (box_sizing === \"border-box\") {\r\n    var padding_top = parseFloat(style.getPropertyValue(\"padding-top\"));\r\n    var padding_bottom = parseFloat(style.getPropertyValue(\"padding-bottom\"));\r\n    var border_top = parseFloat(style.getPropertyValue(\"border-top-width\"));\r\n    var border_bottom = parseFloat(\r\n      style.getPropertyValue(\"border-bottom-width\")\r\n    );\r\n    height = height - padding_top - padding_bottom - border_top - border_bottom;\r\n  }\r\n  el.dataset.calculatedHeight = height; // adds property for debuging\r\n  return height;\r\n}\r\n\r\n// Calculate width without padding.\r\nfunction getWidth(el) {\r\n  var style = window.getComputedStyle(el, null);\r\n  var width = parseFloat(style.getPropertyValue(\"width\"));\r\n  var box_sizing = style.getPropertyValue(\"box-sizing\");\r\n  if (box_sizing === \"border-box\") {\r\n    var padding_left = parseFloat(style.getPropertyValue(\"padding-left\"));\r\n    var padding_right = parseFloat(style.getPropertyValue(\"padding-right\"));\r\n    var border_left = parseFloat(style.getPropertyValue(\"border-left-width\"));\r\n    var border_right = parseFloat(style.getPropertyValue(\"border-right-width\"));\r\n    width = width - padding_left - padding_right - border_left - border_right;\r\n  }\r\n  el.dataset.calculatedWidth = width; // adds property for debuging\r\n  return width;\r\n}\r\n\r\nfunction maxLineCheck(element = null) {\r\n  const isExportMode = window.location.href.indexOf(\"exports\") > -1;\r\n  const isLocalDev = window.location.href.indexOf(\"localhost\") > -1;\r\n  const preventExportOverflow =\r\n    document.body.dataset.preventExportOverflow === \"true\";\r\n  const isProjectKit = isLocalDev\r\n    ? undefined\r\n    : window.parent.document.querySelector(\".preview-frame\");\r\n\r\n  if ((isExportMode && preventExportOverflow) || isProjectKit) return;\r\n\r\n  const blocks = document.querySelectorAll(\"[data-max-line]\");\r\n  blocks.forEach((block) => {\r\n    const lineCount = countLines(block);\r\n    // Getting the data-max-line attribute value (max number of lines allowed) \r\n    const maxLine = block.dataset.maxLineAlt || block.dataset.maxLine;\r\n\r\n    lineCount > maxLine\r\n      ? block.classList.add(\"overflow\")\r\n      : block.classList.remove(\"overflow\");\r\n  });\r\n  return true;\r\n}\r\n\r\n/**\r\n*Detailed instruction can be found here:\r\n https://github.com/aleks-frontend/max-height-check\r\n*/\r\nfunction maxHeightCheck(element = null) {\r\n  const isExportMode = window.location.href.indexOf(\"exports\") > -1;\r\n  const isLocalDev = window.location.href.indexOf(\"localhost\") > -1;\r\n  const preventExportOverflow =\r\n    document.body.dataset.preventExportOverflow === \"true\";\r\n  const isProjectKit = isLocalDev\r\n    ? undefined\r\n    : window.parent.document.querySelector(\".preview-frame\");\r\n\r\n  if ((isExportMode && preventExportOverflow) || isProjectKit) return;\r\n\r\n  const blocks = document.querySelectorAll(\"[data-max-height]\");\r\n  blocks.forEach((block) => {\r\n    if (block.dataset.maxHeight === \"dynamic\" || block.dataset.maxHeightDynamic === \"true\") {\r\n      dynamicAssign(block);\r\n    }\r\n    const blockHeight = getHeight(block);\r\n    const maxHeight = block.dataset.maxHeight;\r\n\r\n    // TODO improve this \r\n    if (block.dataset.maxHeight === \"css\") {\r\n      const computedBlockStyle = window.getComputedStyle(block);\r\n      const cssMaxHeight = parseFloat(computedBlockStyle.maxHeight);\r\n      if (!cssMaxHeight) {\r\n        console.error('There needs to be a max height set on the element if you want to use data-max-height=\"css\"')\r\n      }\r\n      maxHeight = cssMaxHeight\r\n    } else {\r\n      // Setting the element's max-height\r\n      block.style.maxHeight = maxHeight + block.dataset.maxHeightUnit || \"px\";\r\n\r\n      // Recalculating maxHeight in case 'rem' is set as a unit\r\n      if (block.dataset.maxHeightUnit === \"rem\") {\r\n        maxHeight = maxHeight * parseFloat(window.getComputedStyle(document.body).fontSize);\r\n      }\r\n    }\r\n\r\n    // Adding an 'overflow' class to an element if it's offset height exceedes the max-line-height\r\n    blockHeight > maxHeight\r\n      ? block.classList.add(\"overflow\")\r\n      : block.classList.remove(\"overflow\");\r\n  });\r\n}\r\n\r\nfunction dynamicAssign(element = null) {\r\n  const container = element.parentNode;\r\n  container.style.overflow = \"hidden\";\r\n  // const containerComputed = {\r\n  //   height: parseFloat(window.getComputedStyle(container).height),\r\n  //   top: parseFloat(window.getComputedStyle(container).paddingTop),\r\n  //   bottom: parseFloat(window.getComputedStyle(container).paddingBottom),\r\n  // };\r\n  // const containerHeight = Math.floor(\r\n  //   containerComputed.height - containerComputed.top - containerComputed.bottom\r\n  // );\r\n  const containerHeight = getHeight(container)\r\n  // TODO work out what subtrahend is \r\n  const subtrahends = [...container.querySelectorAll(\".js-subtrahend\")];\r\n\r\n  const subtrahendsHeight = subtrahends.reduce((totalHeight, subtrahend) => {\r\n    const subtrahendMargins = {\r\n      top: parseFloat(window.getComputedStyle(subtrahend).marginTop),\r\n      bottom: parseFloat(window.getComputedStyle(subtrahend).marginBottom),\r\n    };\r\n    return (\r\n      totalHeight +\r\n      subtrahend.offsetHeight +\r\n      subtrahendMargins.top +\r\n      subtrahendMargins.bottom\r\n    );\r\n  }, 0);\r\n\r\n  const dynamicHeight = containerHeight - subtrahendsHeight;\r\n\r\n  element.dataset.maxHeightDynamic = \"true\";\r\n  element.dataset.maxHeight = dynamicHeight;\r\n  container.style.overflow = \"visible\";\r\n}\r\n\r\n// Adding limit for the word length\r\nfunction charLimit(element = null) {\r\n  const blocks = document.querySelectorAll(\"[data-char-limit]\");\r\n  blocks.forEach((element) => {\r\n    const limit = element.dataset.charLimit;\r\n\r\n    if (element === null) {\r\n      return;\r\n    }\r\n    var tokenValue = element.querySelectorAll(\".token-value\");\r\n\r\n    if (tokenValue.length != 0) {\r\n      element = tokenValue.item(0);\r\n    }\r\n    var code = element.innerText;\r\n    if (code.length > limit) {\r\n      // Check Token Again\r\n      if (tokenValue.length != 0) {\r\n        element.parentNode.classList.add(\"overflow\");\r\n      } else {\r\n        element.classList.add(\"overflow\");\r\n      }\r\n    } else {\r\n      // Check Token Again\r\n      if (tokenValue.length != 0) {\r\n        element.parentNode.classList.remove(\"overflow\");\r\n      } else {\r\n        element.classList.remove(\"overflow\");\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport { charLimit, dynamicAssign, maxHeightCheck, maxLineCheck, getWidth, getHeight, countLines }","import { getWidth, getHeight, countLines } from './limiters.js'\n/**\n * textFit v3.1.0\n * Previously known as jQuery.textFit\n * 11/2014 by STRML (strml.github.com)\n * MIT License\n *\n * To use: textFit(document.getElementById('target-div'), options);\n *\n * Will make the *text* content inside a container scale to fit the container\n * The container is required to have a set width and height\n * Uses binary search to fit text with minimal layout calls.\n * Version 2.0 does not use jQuery.\n */\n/* global define:true, document:true, window:true, HTMLElement:true*/\n\n// (function (root, factory) {\n//   \"use strict\";\n\n//   // UMD shim\n//   if (typeof define === \"function\" && define.amd) {\n//     // AMD\n//     define([], factory);\n//   } else if (typeof exports === \"object\") {\n//     // Node/CommonJS\n//     module.exports = factory();\n//   } else {\n//     // Browser\n//     root.textFit = factory();\n//   }\n// })(typeof global === \"object\" ? global : this, function () {\n//   \"use strict\";\n\n  var defaultSettings = {\n    alignVert: false, // if true, textFit will align vertically using css tables\n    alignHoriz: false, // if true, textFit will set text-align: center\n    multiLine: false, // if true, textFit will not set white-space: no-wrap\n    stopOverflow: false, // if true, a error we be thrown if the content is overflowing\n    maxLine: false, // if true, textFit will throw and error if the text is over the supplied number of lines\n    detectMultiLine: true, // disable to turn off automatic multi-line sensing\n    fontUnit: \"rem\", // what unit should the final font be. using rems or mm is sometimes useful\n    fontChangeSize: 0.1, // how much should the font size by ajusted by each time. 0.1 and 0.01 is useful for when using a rem font unit\n    minFontSize: 0.3,\n    maxFontSize: 1,\n    reProcess: true, // if true, textFit will re-process already-fit nodes. Set to 'false' for better performance\n    widthOnly: false, // if true, textFit will fit text to element width, regardless of text height\n    alignVertWithFlexbox: false, // if true, textFit will use flexbox for vertical alignment\n    display: \"inline-block\", // in case you need to change this\n  };\n\n  export default function textFit(els, options) {\n    if (!options) options = {};\n\n    // Extend options.\n    var settings = {};\n    for (var key in defaultSettings) {\n      if (options.hasOwnProperty(key)) {\n        settings[key] = options[key];\n      } else {\n        settings[key] = defaultSettings[key];\n      }\n    }\n\n    // Convert jQuery objects into arrays\n    if (typeof els.toArray === \"function\") {\n      els = els.toArray();\n    }\n\n    // Support passing a single el\n    var elType = Object.prototype.toString.call(els);\n    if (\n      elType !== \"[object Array]\" &&\n      elType !== \"[object NodeList]\" &&\n      elType !== \"[object HTMLCollection]\"\n    ) {\n      els = [els];\n    }\n\n    // Process each el we've passed.\n    for (var i = 0; i < els.length; i++) {\n      try {\n        processItem(els[i], settings);\n      } catch (e) {\n        throw e;\n      }\n    }\n  };\n\n  /**\n   * The meat. Given an el, make the text inside it fit its parent.\n   * @param  {DOMElement} el       Child el.\n   * @param  {Object} settings     Options for fit.\n   */\n  function processItem(el, settings) {\n    if (!isElement(el) || (!settings.reProcess && el.getAttribute(\"textFitted\"))) {\n      return false;\n    }\n\n    // Set textFitted attribute so we know this was processed.\n    if (!settings.reProcess) {\n      el.setAttribute(\"textFitted\", 1);\n    }\n\n    var innerSpan, originalHeight, originalHTML, originalWidth;\n    var low, mid, high;\n\n    // Get element data.\n    originalHTML = el.innerHTML;\n    originalWidth = getWidth(el);\n    originalHeight = getHeight(el);\n\n    // Don't process if we can't find box dimensions\n    if (!originalWidth || (!settings.widthOnly && !originalHeight)) {\n      if (!settings.widthOnly)\n        throw new Error(\n          \"Set a height and width on the target element \" +\n            el.outerHTML +\n            \" before using textFit!\"\n        );\n      else\n        throw new Error(\n          \"Set a width on the target element \" +\n            el.outerHTML +\n            \" before using textFit!\"\n        );\n    }\n    let textFittedSpan = el.querySelector(\"span.textFitted\")\n    // Add textFitted span inside this container.\n    if (!textFittedSpan) {\n      innerSpan = document.createElement(\"span\");\n      innerSpan.className = \"textFitted\";\n      // Inline block ensure it takes on the size of its contents, even if they are enclosed\n      // in other tags like <p>\n      innerSpan.style[\"display\"] = settings.display;\n      innerSpan.innerHTML = originalHTML;\n      el.innerHTML = \"\";\n      el.appendChild(innerSpan);\n    } else {\n      // Reprocessing.\n      innerSpan = textFittedSpan;\n      // Remove vertical align if we're reprocessing.\n      if (innerSpan.classList.contains(\"textFitAlignVert\")) {\n        innerSpan.className = innerSpan.className.replace(\n          \"textFitAlignVert\",\n          \"\"\n        );\n        innerSpan.style[\"height\"] = \"\";\n        el.className.replace(\"textFitAlignVertFlex\", \"\");\n      }\n    }\n\n    // Prepare & set alignment\n    if (settings.alignHoriz) {\n      el.style[\"text-align\"] = \"center\";\n      innerSpan.style[\"text-align\"] = \"center\";\n    }\n\n    // Check if this string is multiple lines\n    // Not guaranteed to always work if you use wonky line-heights\n    var multiLine = settings.multiLine;\n    if (\n      settings.detectMultiLine &&\n      !multiLine &&\n      countLines(innerSpan) > 1\n    ) {\n      multiLine = true;\n    }\n    // If we're not treating this as a multiline string, don't var it wrap.\n    if (!multiLine) {\n      el.style[\"white-space\"] = \"nowrap\";\n    }\n\n    var maxLine = parseInt(el.dataset.maxLine || settings.maxLine);\n    var startingSize = innerSpan.style.fontSize;\n\n    low = settings.minFontSize;\n    high = settings.maxFontSize;\n    // Binary search for highest best fit\n    var size = low;\n    while (low <= high) {\n      mid = parseFloat(((high + low) / 2).toFixed(2));\n      innerSpan.style.fontSize = mid + settings.fontUnit;\n\n      var scrollWidth = getWidth(innerSpan) <= originalWidth;\n      var scrollHeight =\n        settings.widthOnly || getHeight(innerSpan) <= originalHeight;\n\n      // check if too many lines and if it is then we need to adjust the font size accordingly\n      var maxLines = false;\n      if (Number.isInteger(maxLine)) {\n        var lineCount = countLines(innerSpan);\n        maxLines = lineCount > maxLine;\n      }\n\n      if (scrollWidth && scrollHeight && !maxLines) {\n        size = mid;\n        low = mid + settings.fontChangeSize;\n      } else {\n        high = mid - settings.fontChangeSize;\n      }\n      // await injection point\n    }\n    if (startingSize !== size + settings.fontUnit) {\n      console.log(\"textFit font changed to:\", size + settings.fontUnit);\n    }\n    // updating font if differs:\n    if (innerSpan.style.fontSize != size + settings.fontUnit)\n      innerSpan.style.fontSize = size + settings.fontUnit;\n\n    // add the required CSS in order to stop overflows\n    if (Number.isInteger(maxLine) || settings.stopOverflow) {\n      // if (!document.getElementById(\"overflowStyleSheet\")) {\n      //   var style = [\".overflow > span {\", \"overflow: hidden;\", \"}\"].join(\"\");\n      //   var css = document.createElement(\"style\");\n      //   css.type = \"text/css\";\n      //   css.id = \"overflowStyleSheet\";\n      //   css.innerHTML = style;\n      //   document.body.appendChild(css);\n      // }\n\n      // detect if data max lines has been exceeded\n      if (Number.isInteger(maxLine)) {\n        el.classList.remove(\"overflow\");\n        delete el.dataset.customOverflowMessage;\n        var lineCount = countLines(innerSpan);\n        el.dataset.lineCount = lineCount;\n        if (lineCount > maxLine) {\n          el.dataset.customOverflowMessage =\n            \"Too much content has been added for the allowed space\";\n          el.classList.add(\"overflow\");\n        }\n      }\n      // detect if the content is larger than it's parent\n      if (settings.stopOverflow) {\n        var overflow = getHeight(el) < getHeight(innerSpan);\n        if (overflow) {\n          el.classList.add(\"overflow\");\n        }\n      }\n    }\n    // Our height is finalized. If we are aligning vertically, set that up.\n    if (settings.alignVert) {\n      // addStyleSheet();\n      var height = getHeight(innerSpan);\n      if (window.getComputedStyle(el)[\"position\"] === \"static\") {\n        el.style[\"position\"] = \"relative\";\n      }\n      if (!innerSpan.classList.contains(\"textFitAlignVert\")) {\n        innerSpan.className = innerSpan.className + \" textFitAlignVert\";\n      }\n      innerSpan.style[\"height\"] = height + \"px\";\n      if (\n        settings.alignVertWithFlexbox &&\n        !el.classList.contains(\"textFitAlignVertFlex\")\n      ) {\n        el.className = el.className + \" textFitAlignVertFlex\";\n      }\n    }\n  }\n\n  // Returns true if it is a DOM element\n  function isElement(o) {\n    return typeof HTMLElement === \"object\"\n      ? o instanceof HTMLElement //DOM2\n      : o &&\n          typeof o === \"object\" &&\n          o !== null &&\n          o.nodeType === 1 &&\n          typeof o.nodeName === \"string\";\n  }","  // get sidebar element on the current page\n  const getSidebar = () => {\n    let sidebar = window.parent.document.querySelectorAll(\".sidebar .current-list\");\n    return [...sidebar].pop();\n  }\n  \n  const showMTOMessage = (message) => {\n    sidebar.querySelector(formGroupClassList).innerHTML = message;\n  }\n  const correctInputName = (name) => {\n    return sidebar.querySelector(\".flex.items-center .h-3.ff-open-sans.truncate\").innerText === name;\n  }\n  \n  const hideInput = (inputValue) => {\n    sidebar.querySelectorAll(\".sidebar-items\").find((input) => {\n      input.querySelector(\".field-variable-tag\").innerText === inputValue\n    }).style.display = 'none';\n  }\n  // gobal varbiles to avoid needed to retreve these more than once \n  const sidebar = getSidebar();\n  // get the state of the docment in order to tell if it's a template/document/export \n  // var state = document.body.getAttribute(\"document-state\");\n  \n  const setupMTO = (mtoList, mtoParams, inputData, settings) => {\n    try {\n      let { inputName, inputListClassList, formGroupClassList } = mtoParams;\n    \n      if (inputName == \"\") {\n        throw \"MTO Input Name Not Defined\";\n      }\n   \n      mtoList = mtoList.toLowerCase().split(\"_\").join(\" \").split(',');\n  \n      if (!mtoList && state !== \"template\") {\n        if (correctInputName(inputName)) {\n          // The user has selected into the MTO input, however some their team is not allowed to use MTO, show an error.\n          showMTOMessage(\"MTO is not available for your team. Please click back to continue editing your document.\");\n        } else {\n          hideInput(inputName);\n        }\n        return;\n      }\n  \n      let data = JSON.parse(inputData);\n      \n      if (state === \"export\" || !sidebar) {\n        if (typeof window.handleMTOData == 'function')\n          window.handleMTOData(data, settings);\n        return;\n      }\n  \n      if (state === \"template\") {\n        if (correctInputName(inputName)) {\n          showMTOMessage(\n            \"MTO functionality is not available on a template level.\"\n          );\n        }\n        return;\n      }\n      let hideTeamMetadata = () => {\n        getSidebar().querySelectorAll('.search-bar-wrapper').forEach(el => el.remove())\n        getSidebar().querySelectorAll('.action-buttons').forEach(el => el.remove())\n        getSidebar().querySelectorAll(inputListClassList).forEach((inputOption) => {\n          if (!mtoList.includes(inputOption.querySelector(\"input\").value)) {\n            inputOption.remove();\n          } else {\n            let span = inputOption.querySelector(\"span\");\n            if (span.innerText.match(/^[0-9]{4}/g)) {\n              span.innerText = span.innerText.substring(7);\n            }\n          }\n        });\n      }\n      setInterval(() => hideTeamMetadata(), 500)\n      hideTeamMetadata();\n      if (typeof window.handleMTOData === 'function') {\n        window.handleMTOData(data, settings);\n      } else {\n        console.warn(\"please define a fucntion called handleMTOData at the window level\")\n      }\n    } catch (error) {\n      console.error(\"An MTO error has occurred. Please try again later. If the issue still persists please contact Outfit Support\");\n      console.error(\"MTO Error: \" + error);\n      return;\n    }\n  }\n\nexport { setupMTO, getSidebar };\n","import FontFaceObserver from './fontfaceobserver.js'\nimport { imageCompression, ensureAllImagesLoaded } from './pageSetup.js'\nimport { dynamicReplace } from './replace.js';\nimport setupPlaceholder from './placeholder.js';\nimport textFit from './textFit.js';\nimport { setupMTO } from './mto.js';\nimport { charLimit, dynamicAssign, maxHeightCheck, maxLineCheck } from './limiters';\n\nconst highestZ = () => {\n  return Array.from(document.querySelectorAll('body *'))\n    .map(a => parseFloat(window.getComputedStyle(a).zIndex))\n    .filter(a => !isNaN(a))\n    .sort()\n    .pop() + 1;\n}\n\n// display a message to block rendering for major issues\nconst blockRender = (v) => {\n  document.querySelector(\"body\").innerHTML = `<style>html { position: absolute; background: #111820; color: white; font-family: sans-serif; font-size: 0.5rem; z-index: ${highestZ()}; height: 100%; width: 100%;}  body { margin: 1rem; width: 80%!important; } p { font-size: 0.4rem; } </style>\n  <h2>⚠️ Legacy render detected</h2>\n  <h4>⚠Please enable <code>{ allowLegacyRendering: true }</code>\n   in the boilerplate or update this template to version 1.1 or 2.1</h4>\n   <p>This template is using renderer ${v}</p>\n   <p>Please contact support if you see this message.</p>`;\n   document.dispatchEvent(new Event('printready'));\n}\n\n// wait for the dom to laod or continue if it has already loaded\nconst domReady = new Promise((resolve, reject) => {\n  if (\n    document.readyState === \"complete\" ||\n    document.readyState === \"loaded\" ||\n    document.readyState === \"interactive\"\n  ) {\n    resolve();\n  } else {\n    window.addEventListener(\"DOMContentLoaded\", resolve);\n    window.addEventListener(\"error\", reject);\n  }\n});\n// wait for the window to laod or continue if it has already loaded\nconst winLoad = new Promise((resolve, reject) => {\n  if (document.readyState === \"complete\") {\n    resolve();\n  } else {\n    window.addEventListener(\"load\", resolve);\n    window.addEventListener(\"error\", reject);\n  }\n});\n \nconst loadLESS = (variables = {}) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let styleCode = document.createElement('link');\n      styleCode.setAttribute('type', 'text/css');\n      styleCode.setAttribute('rel', 'stylesheet');\n      styleCode.setAttribute('href', 'https://cdn.jsdelivr.net/gh/OutfitDelivery/boilerplate@v3.0/css/main.min.css');\n      document.head.insertAdjacentElement('afterbegin', styleCode);\n  \n      var less = {\n        globalVars: variables\n      };\n\n      require('less');\n      require('prefixfree');\n\n      document.querySelectorAll('style[media=\"\"][data-href$=\".less\"]:not([href])').forEach(e => e.remove());\n\n      resolve()\n    } catch (e) { reject(e) }\n  });\n}\n\nexport default class boilerplate {\n  constructor({ \n    fonts = [],\n    ensureImagesLoad = true,\n    allowLegacyRendering = false,\n    exportReduceFont = 0,\n    firefoxReduceFont = 0,\n    trimMarks = false,\n    variables = {}\n   } = {}) {\n    \n     this.fonts = fonts || '';\n     this.ensureImagesLoad = ensureImagesLoad;\n     this.allowLegacyRendering = allowLegacyRendering;\n     this.exportReduceFont = exportReduceFont;\n     this.firefoxReduceFont = firefoxReduceFont;\n     this.trimMarks = trimMarks;\n     this.variables = variables;\n  \n    if (!this.keepConsole) {\n      console.clear();\n    }\n    if (JSON.stringify(variables) !== '{}') {\n      console.table(variables)\n    }\n  }\n  start() {\n    return new Promise((resolve, reject) => {\n      // all these checks need to be done before the tempalte code can be run \n      let checkList = [\n        domReady,\n        loadLESS(this.variables),\n        this.setOutfitState(),\n        this.fontsLoaded(),\n        this.setBrowserType(),\n        this.setSize(),\n        this.addCrop()\n      ];\n      Promise.all(checkList)\n        .then(() => {\n          if (typeof window.onTextChange === \"function\") {\n            window.onTextChange();\n          }\n          window.addEventListener(\"resize\", async (e) => {\n            await this.setSize();\n            if (state !== \"preview\" && typeof onTextChange === \"function\") {\n              window.onTextChange('resize');\n            }\n          });\n          if (state === 'document') {\n            // OutfitIframeShared.eventEmitter.addListener(\n            //   'token-value:change', (e) => {\n            //   if (state !== \"preview\" && typeof window.onTextChange === \"function\") {\n            //     if (e.currentTarget.parentNode) {\n            //       window.onTextChange(e.currentTarget.parentNode);\n            //     } else {\n            //       window.onTextChange();\n            //     }\n            //   }\n            // });\n          }\n          if (state === \"document\") {\n            imageCompression();\n            // set timeout is used here to push this to the end of the heap which means it will load after everything else \n            setTimeout(() => {\n              this.defaultsRemoved();\n            },0);\n          }\n          console.log(\"Content checks ran 😎\");\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  // ensure that all fonts are loaded check\n  fontsLoaded() {\n    return new Promise((resolve, reject) => {\n      let fontsListed = this.fonts\n      if (!Array.isArray(fontsListed)) {\n          fontsListed = [fontsListed]\n      }\n      if (\n        !fontsListed ||\n        (fontsListed && fontsListed.length < 1) ||\n        fontsListed[0] === \"PUT_ALL_FONT_NAMES_HERE\"\n      ) {\n        reject(\"No fonts were put in the boilerplate config. For example { fonts: ['IBM Plex Sans'] }\");\n      } else {\n          Promise.all(fontsListed.map((font) => {\n              return new FontFaceObserver(font).load();\n            }))\n            .then(resolve)\n            .catch(reject);\n      }\n    });\n  };\n\n  setBrowserType () {\n    return new Promise((resolve) => {\n      let browser = {\n        // Opera 8.0+\n        isOpera: (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0,\n        // Firefox 1.0+\n        isFirefox: typeof InstallTrigger !== 'undefined',\n        // Safari 3.0+ \"[object HTMLElementConstructor]\" \n        isSafari: /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && window['safari'].pushNotification)),\n        // Internet Explorer 6-11\n        isIE: /*@cc_on!@*/false || !!document.documentMode,\n        // Chrome 1 - 79\n        isChrome:  !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime),\n        // mac detection\n        isMac: window.navigator.appVersion.includes(\"Mac\")\n      }\n      //  Edge 20+\n      browser['isEdge'] = !browser.isIE && !!window.StyleMedia;\n      // Edge (based on chromium) detection\n      browser['isEdgeChromium'] = browser.isChrome && (navigator.userAgent.indexOf(\"Edg\") != -1);\n      // Blink engine detection\n      browser['isBlink'] = (browser.isChrome || browser.isOpera) && !!window.CSS;\n  \n      document.body.classList += ' ' + Object.keys(browser).filter((key) => {\n        return browser[key]\n      }).join(' ');\n      this.browser = browser;\n      resolve(browser)\n    });\n  }\n  \n  setOutfitState () {\n    return new Promise((resolve) => {\n      var mode = window.location.href.indexOf(\"exports\") > -1 ? \"export\" : false;\n      mode =\n        !mode && window.location.href.indexOf(\"templates\") > -1\n          ? \"template\"\n          : mode;\n      mode =\n        !mode && window.location.href.indexOf(\"projects\") > -1\n          ? \"document\"\n          : mode;\n      mode =\n        !mode && window.location.href.indexOf(\"preview\") > -1 ? \"preview\" : mode;\n      mode =\n        !mode && window.location.href.indexOf(\"localhost\") > -1 ? \"local\" : mode;\n      if (!mode) {\n        mode = \"error\";\n      }\n      document.body.setAttribute(\"document-state\", mode);\n      document.body.setAttribute(\"data-trim\", this.trimMarks);\n      window.state = mode;\n      this.state = mode;\n      resolve(mode);\n    });\n  }\n  \n  setSize () {\n    return new Promise((resolve) => {\n      const vw =\n        (this.trimMarks ? window.innerWidth : window.innerWidth + 57.62) / 100;\n      const vh =\n        (this.trimMarks ? window.innerHeight : window.innerHeight + 57.62) / 100;\n      const vmin = Math.min(vw, vh);\n      const vmax = Math.max(vw, vh);\n  \n      // Saving the preliminary font size calculation\n      const preliminaryCalc = vmin * 2 + vmax * 1.4 + vh * 2;\n  \n      // Checking if the document is currently in export mode\n      const isExportMode = window.state === \"exports\";\n  \n      // Checking if the active browser is Firefox\n      const isFirefox = navigator.userAgent.includes(\"Firefox\");\n  \n      const exportModeFontSize =\n        preliminaryCalc - (this.exportReduceFont / 100) * preliminaryCalc;\n      const firefoxFontSize =\n        preliminaryCalc - (this.firefoxReduceFont / 100) * preliminaryCalc;\n  \n      // Reducing the preliminaryCalc value by reduceVal in export mode and in Firefox preview mode\n      const finalCalc = isExportMode\n        ? exportModeFontSize\n        : isFirefox\n        ? firefoxFontSize\n        : preliminaryCalc;\n  \n      document.documentElement.style.fontSize = `${finalCalc}px`;\n  \n      resolve();\n    });\n  }\n\n  pageHeightSetup() {\n    let agent = navigator.userAgent;\n    if (agent.includes('OPTION 2.1')) {\n      console.info(\"Renderer 2.1 Set\");\n      if (!this.trimMarks) {\n        return \"calc(100vh - 1px)\";\n      }\n      return \"100vh\";\n    } else if (agent.includes('OPTION 1.1')) {\n      console.info(\"Renderer 1.1 Set\");\n      return \"100vh\";\n    } else if (agent.includes('OPTION 1.0')) {\n      if (!this.allowLegacyRendering) {\n        blockRender('1.0')\n      }\n      return \"100vh\";\n    } else if (agent.includes('OPTION 2.0')) {\n      if (!this.allowLegacyRendering) {\n        blockRender('2.0')\n      }\n      if (!this.trimMarks) {\n        return \"calc(100vh - 1px)\";\n      }\n      return \"100vh\";\n    } else {\n      // console.error(\"Renderer Not Set\");\n      return \"100vh\";\n    }\n  }\n  \n  // Fix for the resizable background images - fullscreen and digital vairaitons only\n  addCrop() {\n    return new Promise((resolve) => {\n      // crop and bleed\n      var cropSVG =\n        '<svg class=\"crop-mark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.6 21.6\" xmlns:v=\"https://vecta.io/nano\"><path d=\"M21 15V0m-6 21H0\" fill=\"none\" stroke=\"#000\" stroke-width=\"0.25\" stroke-miterlimit=\"10.0131\"/></svg>';\n\n      let pageHeight = this.pageHeightSetup();\n\n      document.querySelectorAll(\".page\").forEach((page) => {\n        page.style.height = pageHeight;\n        if (this.trimMarks) {\n          page.insertAdjacentHTML(\n            \"afterbegin\",\n            `<div class=\"crop-marks\">\n            <div class=\"crop-mark top-left\">${cropSVG}</div>\n            <div class=\"crop-mark top-right\">${cropSVG}</div>\n            <div class=\"crop-mark bottom-left\">${cropSVG}</div>\n            <div class=\"crop-mark bottom-right\">${cropSVG}</div>\n          </div>`\n          );\n        }\n      });\n\n      Array.prototype.slice\n        .call(document.querySelectorAll(\".bleed\"))\n        .forEach((bleed) => {\n          bleed.style.cssText = this.trimMarks\n            ? \"position: absolute; top: 4.41mm; right: 4.41mm; bottom: 4.41mm; left: 4.41mm;\"\n            : \"position: absolute; top: -3mm; right: -3mm; bottom: -3mm; left: -3mm\";\n        });\n\n      document\n        .querySelectorAll(\"[data-trim='false'] .outfit-resizable-background\")\n        .forEach((el) => {\n          el.parentNode.style.left = \"0\";\n          el.parentNode.style.right = \"0\";\n          el.parentNode.style.top = \"0\";\n          el.parentNode.style.bottom = \"0\";\n          el.parentNode.style.width = \"100%\";\n          el.parentNode.style.height = \"100%\";\n        });\n      resolve();\n    });\n  }\n\n  // send a event to stop a render \n  completeRender() {\n    let checkList = [winLoad]\n    if (this.ensureImagesLoad) {\n      checkList.push(ensureAllImagesLoaded)\n    }\n    Promise.all(checkList).then((values) => {\n      let loadTime = Date.now() - window.performance.timing.navigationStart\n      console.info(`Document has finished rendering in ${loadTime}ms`);\n      document.dispatchEvent(new Event('printready'))\n    }).catch(err => {\n        console.error(err);\n        throw '⚠️ Render failed for logged reason ⤴️'\n    });\n  }\n  defaultsRemoved () {\n    // ensure that the user has changed important tempalte metadata\n    return new Promise((resolve, reject) => {\n      let title = document.title;\n      if (title === '' || title === 'PUT_TEMPLATE_NAME_HERE') {\n        reject('Please put the name of the template in the title of the document')\n      }\n      let builtBy = document.querySelector('meta[name=\"template-built-by\"]').getAttribute('content');\n      if (builtBy === '' || builtBy === 'PUT_YOUR_NAME_HERE') {\n        reject('Please add your name in the document meta tags')\n      } \n      let scopeCard = document.querySelector('meta[name=\"scope\"]').getAttribute('content');\n      if (scopeCard === '' || scopeCard === 'DTB-PUT_JIRA_NUMBER_HERE') {\n        reject('Please add the scope card ID in the document meta tags')\n      }\n      let builtCard = document.querySelector('meta[name=\"build\"]').getAttribute('content');\n      if (builtCard === '' || builtCard === 'DTB-PUT_JIRA_NUMBER_HERE') {\n        reject('Please add the build card ID in the document meta tags')\n      } \n      if ([...document.head.childNodes].some(node => {\n        if (node && node.data && node.nodeType  === 8) {\n          return node.data.includes('Template Admin Build Instructions')\n        }\n      })) {\n        reject('Please remove the \"Template Admin Build Instructions\" comment from the top of the document')\n      }\n      resolve();\n    });\n  }\n  hotReloadOnChange () {\n    if (this.state === 'document' && typeof BroadcastChannel === 'function') {\n      let bc = new BroadcastChannel('fs-sync');\n      bc.onmessage = (ev) => {\n        if (!window.top.reloading) {\n          window.top.reloading = true;\n          window.top.location.reload()\n        }\n      }\n    }\n  }\n  dynamicReplace () {\n    return dynamicReplace.apply(null, arguments)\n  }\n  textFit () {\n   return textFit.apply(null, arguments)\n  }\n  setupPlaceholder () {\n    return setupPlaceholder.apply(null, arguments)\n  }\n  maxLineCheck () {\n    return maxLineCheck.apply(null, arguments)\n  }\n  maxHeightCheck () {\n    return maxHeightCheck.apply(null, arguments)\n  }\n  charLimit () {\n    return charLimit.apply(null, arguments)\n  }\n  dynamicAssign () {\n    return dynamicAssign.apply(null, arguments)\n  }\n  highestZindex () {\n    return highestZ()\n  }\n  ensureAllImagesLoaded() {\n    return ensureAllImagesLoaded.apply(null, arguments)\n  }\n  setupMTO() {\n    return setupMTO.apply(null, arguments)\n  }\n}\n"],"sourceRoot":""}