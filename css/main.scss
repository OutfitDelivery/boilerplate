/*minireset.css*/
html,body,p,ol,ul,li,dl,dt,dd,blockquote,figure,fieldset,legend,textarea,pre,iframe,hr,h1,h2,h3,h4,h5,h6{margin:0;padding:0}h1,h2,h3,h4,h5,h6{font-size:unset;font-weight:normal}ul{list-style:none}button,input,select,textarea{margin:0}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}img,embed,iframe,object,audio,video{height:auto;max-width:100%}iframe{border:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0;text-align:left}

* {
  -webkit-font-smoothing: antialiased;
}
html {
  font-size: 16px;
  color: #000000;
  word-break: break-word;
  background: #ffffff;
  line-height: 1; 
}

@media screen {
  .crop .page:not(:last-child) {
    border-bottom: 1px dotted cyan;
  }
}

.page {
  overflow: hidden;
  position: relative; 
  height: 100vh;
  width: 100vw;
  .bleed {
    position: absolute;
    top: calc(calc(var(--bleed) * -1) * 1mm); 
    left: calc(calc(var(--bleed) * -1) * 1mm); 
    right: calc(calc(var(--bleed) * -1) * 1mm); 
    bottom: calc(calc(var(--bleed) * -1) * 1mm); 
    [data-trim="true"] & {
      top: calc(var(--trim) * 1mm);
      left: calc(var(--trim) * 1mm);
      right: calc(var(--trim) * 1mm);
      bottom: calc(var(--trim) * 1mm);
    }
  }
}

.container {
  position: relative;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.relative {
  position: relative;
}

.cover {
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
}
.contain {
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
}
.blend {
  background-blend-mode: overlay;
}

/* Small fix that prevents Superscript and Subscript from breaking the element's line-height */
sup,
sub {
  vertical-align: baseline;
  position: relative;
  top: -0.4em;        
  line-height: 1em;
}
sub {
  top: 0.4em;
}   

/* Dynamic Inject container style */
.js-dynamicInjectMaster { display: none; }
.js-dynamicInjectMasterReposition {
  position: absolute;
  opacity: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  z-index: -1;
}

/* Helper classes */
.u-hide { display: none; }

.backgroundImage {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
}
.backgroundImage div {
  width: auto !important;
  height: auto !important;
  right: 0;
  bottom: 0;
}
/* Helper class for fixing Reposition tool bug */
.reposition-fix {
  position: absolute;
  overflow: hidden;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;        
}
.reposition-fix div {
  top: 0 !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  width: 100% !important;
  height: 100% !important;
}

.placeholderImage {
  position: absolute;
  top: calc(var(--bleed) * 1mm);
  left: calc(var(--bleed) * 1mm);
  bottom: calc(var(--bleed) * 1mm);
  right: calc(var(--bleed) * 1mm);
  width: calc(100% - calc(var(--bleed) * 2 * 1mm));
  height: calc(100% - calc(var(--bleed) * 2 * 1mm));
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0.4;
  z-index:999;
  pointer-events:none;
}

.crop-mark {
  position: absolute;
  width: calc(calc(var(--trim) + var(--bleed)) * 1mm);
  height: calc(calc(var(--trim) + var(--bleed)) * 1mm);
}
.crop-mark {
  &::before {
    content: '';
    position: absolute;
    width: 1px;
    left: calc(calc(var(--trim) + var(--bleed)) * 1mm);
    height: calc(var(--trim) * 1mm);
    background-color: rgba(0,0,0,0.5);
    z-index: 1;
  }
  &::after {
    content: '';
    position: absolute;
    height: 1px;
    top: calc(calc(var(--trim) + var(--bleed)) * 1mm);
    width: calc(var(--trim) * 1mm);
    background-color: rgba(0,0,0,0.5);
    z-index: 1;
  }
}
.crop-marks .crop-mark.top-left {
  top: 0;
  left: 0;
}
.crop-marks .crop-mark.top-right { 
  top: 0;
  right: 0;
  transform: rotate(90deg);
}
.crop-marks .crop-mark.bottom-left {
  bottom: 0;
  left: 0;
  transform: rotate(270deg);
}
.crop-marks .crop-mark.bottom-right {
  bottom: 0;
  right: 0;
  transform: rotate(180deg);
}

a { 
  display: inline-block;
}

/* textfit styles */
.textFitAlignVert {
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  margin: auto;
  display: flex;
  justify-content: center;
  flex-direction: column;
}
.textFitAlignVertFlex {
  display: flex;
}
.textFitAlignVertFlex .textFitAlignVert {
  position: static;
}

.fullSize {
  width: 100%;
  height: 100%;
}

/* rich text inputs can have tags which break line counting so we set all those tags to block for consistent heights */
.token-value {
  display: inherit;
}

/* When we are counting lines it's important to not have padding/margin on any of the elements as this will increase the count */
.countingLines * {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
  top: 0 !important;
  bottom: 0 !important;
}

/*
Overflow styles from the platform that are only here as the platfrom isn't adding them
https://outfithq.atlassian.net/browse/OP-4123
*/
.overflow, [data-overflow] {
  position: relative !important;
  color: red !important;
  border: none;
  box-shadow: 0 0 0 0.0362rem red;
  background: red;
  background: rgba(255,0,0,0.4);
  z-index: 999;
}
.overflow *, [data-overflow] * {
  color: red !important;
}
.overflow::before, [data-overflow]::before {
  content: '+';
  position: absolute;
  z-index: 5;
  top: 0;
  right: 0;
  height: 1em;
  width: 1em;
  max-height: 100%;
  color: red;
  padding: 0;
  box-sizing: border-box;
  font-size: 0.8em;
  text-align: center;
  line-height: 1em;
  background-color: white;
  display: flex;
  justify-content: center;
  align-items: center;
}
.overflow:hover:before, [data-overflow]:hover:before {
  background-color: red;
  color: white;
}
.overflow:hover:after, [data-overflow]:hover:after {
  display: block;
  content: 'More content has been added than space allows';
  position: absolute;
  top: 0;
  right: 0;
  background-color: black;
  color: white;
  border-radius: 0;
  padding: 0.3em 1.5em 0.3em .5em;
  box-sizing: border-box;
  font-size: 0.8em;
  font-weight: 400;
  text-align: right;
  line-height: 1em;
  z-index: 2;
}
.overflow:after, [data-overflow]:after {
  display: none;
}
.overflow .token-value.token-empty, [data-overflow] .token-value.token-empty {
  display: none;
}
[data-overflow]:hover:after {
  content: attr(data-overflow);
}
.overflow[data-max-line]:hover:after {
  content: "There cannot be more than " attr(data-max-line) " lines of content here";
}
.overflow[data-max-line="1"]:hover:after {
  content: "There can only be a single line of content here";
}
.overflow[data-char-limit]:hover:after {
  content: "There can't be more than " attr(data-char-limit) " characters here";
}
.overflow[data-custom-overflow-message]:hover:after {
  content: attr(data-custom-overflow-message);
}
